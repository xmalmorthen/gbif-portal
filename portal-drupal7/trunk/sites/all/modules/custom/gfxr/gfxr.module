<?php

/**
* 
* @ingroup GBIF
*/


/**
* Implements hook_menu().
*
*/
function gfxr_menu() {
	$items['admin/config/gfxr/settings'] = array(
			'title' => 'GBIF Fixer',
			'description' => 'A collection of various fixes needed for the GBIF implementation on Drupal',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('gfxr_form'),
			'access arguments' => array('administer site configuration'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'gfxr.admin.inc',
			);
	$items['workshop'] = array(
			'title' => 'Sawing/milling machines go here',
			'description' => 'A placeholder',
			'page callback' => 'workshop',
			'access arguments' => array('use the shop'),
			);

	return $items;

}


function gfxr_permission() {
	return array(
		'use the shop' => array(
		'title' => t('Use the workshop tools'),
		'description' => t('Allow users to perform various operations.'),
		),
	);
}

/**
 * Implements hook_token_info().
 */
function gfxr_token_info() {
	global $base_url ;

	$types['gfxr'] = array(
		'name' => t("GBIF Fixer tokens"),
		'description' => t("Tokens for various local fixes"),
	);

	$gfxr['baseurl'] = array(
		'name' => t("$base_url"),
		'description' => t("Emit $base_url to be used inside large text fields"),
	);

	return array(
		'types' => $types,
		'tokens' => array(
		'gfxr' => $gfxr,
	),
	);
}

/**
 * Implements hook_tokens().
 */
function gfxr_tokens($type, $tokens, array $data = array(), array $options = array()) {
  global $user;

	$replacements = array();
  
	if ($type == 'gfxr') {
		foreach ($tokens as $name => $original) {
			switch ($name) {
				case 'cp':
					$replacements[$original] = $GLOBALS['base_url'];
				break;
				case 'dp':
					$replacements[$original] = theme_get_setting( 'vizz2_dataportal_base_url','vizz2' ) ;
				break;
				
			}
		}
	}
  
  return $replacements;
}


/**
 * Implements hook_entity_info_alter().
 *
 * Add an additional display mode
 * so that various custom view(s) can make use of the extra 
 * setting
 */
function gfxr_entity_info_alter(&$entity_info) {
	$entity_info['node']['view modes']['teaser_nt'] = array(
		'label' => t('Teaser_NT'),
		'custom settings' => TRUE,
	);

}

/**
 * Implements hook_search_api_index_items_alter().
 *
 * Remove from the index event_ims objects which are
 * older than the moment of indexing. 
 *
 *
 */
function gfxr_node_view($node, $view_mode ) {
	if ( $node->type == 'event_ims' AND $node->field_start_date['und'][0]['value'] < time() AND $view_mode == 'search_index' ) {
		foreach ( array ('body',
						'field_audience',
						'field_contact',
						'field_venuecountry',
						'field_venue',
						'field_country',
						'field_status',
						'field_resources',
						'field_participants',
						'field_start_date',
						'field_dates',
						'field_city',
						'title') as $field) 
					$node->content[$field]=array(); 
 		$node->title=''; 
		return $node ; // 5.3 vs 5.4?! 
	}

}

/*
function gfxr_search_preprocess ($text) {
	return $text ;
}
*/

function workshop() {
	$terms = array (
					'Afghanistan'=>'AF',
					'Albania'=>'AL',
					'Algeria'=>'DZ',
					'American Samoa'=>'AS',
					'Andorra'=>'AD',
					'Angola'=>'AO',
					'Anguilla'=>'AI',
					'Antarctica'=>'AQ',
					'Antigua and Barbuda'=>'AG',
					'Argentina'=>'AR',
					'Armenia'=>'AM',
					'Aruba'=>'AW',
					'Australia'=>'AU',
					'Austria'=>'AT',
					'Azerbaijan'=>'AZ',
					'Bahamas'=>'BS',
					'Bahrain'=>'BH',
					'Bangladesh'=>'BD',
					'Barbados'=>'BB',
					'Belarus'=>'BY',
					'Belgium'=>'BE',
					'Belize'=>'BZ',
					'Benin'=>'BJ',
					'Bermuda'=>'BM',
					'Bhutan'=>'BT',
					'Bolivia'=>'BO',
					'Bonaire, Sint Eustatius and Saba'=>'BQ',
					'Bosnia and Herzegovina'=>'BA',
					'Botswana'=>'BW',
					'Brazil'=>'BR',
					'British Indian Ocean Territory'=>'IO',
					'Brunei Darussalam'=>'BN',
					'Bulgaria'=>'BG',
					'Burkina Faso'=>'BF',
					'Burundi'=>'BI',
					'Cambodia'=>'KH',
					'Cameroon'=>'CM',
					'Canada'=>'CA',
					'Cape Verde'=>'CV',
					'Cayman Islands'=>'KY',
					'Central African Republic'=>'CF',
					'Chad'=>'TD',
					'Chile'=>'CL',
					'China'=>'CN',
					'Christmas Island'=>'CX',
					'Cocos (Keeling) Islands'=>'CC',
					'Colombia'=>'CO',
					'Comoros'=>'KM',
					'Congo'=>'CG',
					'Congo, The Democratic Republic of the'=>'CD',
					'Cook Islands'=>'CK',
					'Costa Rica'=>'CR',
					'Côte d\'Ivoire'=>'CI',
					'Croatia'=>'HR',
					'Cuba'=>'CU',
					'Curaçao'=>'CW',
					'Cyprus'=>'CY',
					'Czech Republic'=>'CZ',
					'Denmark'=>'DK',
					'Djibouti'=>'DJ',
					'Dominica'=>'DM',
					'Dominican Republic'=>'DO',
					'Ecuador'=>'EC',
					'Egypt'=>'EG',
					'El Salvador'=>'SV',
					'Equatorial Guinea'=>'GQ',
					'Eritrea'=>'ER',
					'Estonia'=>'EE',
					'Ethiopia'=>'ET',
					'Falkland Islands (Malvinas)'=>'FK',
					'Faroe Islands'=>'FO',
					'Fiji'=>'FJ',
					'Finland'=>'FI',
					'France'=>'FR',
					'French Guiana'=>'GF',
					'French Polynesia'=>'PF',
					'French Southern Territories'=>'TF',
					'Gabon'=>'GA',
					'Gambia'=>'GM',
					'Georgia'=>'GE',
					'Germany'=>'DE',
					'Ghana'=>'GH',
					'Gibraltar'=>'GI',
					'Greece'=>'GR',
					'Greenland'=>'GL',
					'Grenada'=>'GD',
					'Guadeloupe'=>'GP',
					'Guam'=>'GU',
					'Guatemala'=>'GT',
					'Guernsey'=>'GG',
					'Guinea'=>'GN',
					'Guinea-Bissau'=>'GW',
					'Guyana'=>'GY',
					'Haiti'=>'HT',
					'Heard Island and McDonald Islands'=>'HM',
					'Holy See (Vatican City State)'=>'VA',
					'Honduras'=>'HN',
					'Hong Kong'=>'HK',
					'Hungary'=>'HU',
					'Iceland'=>'IS',
					'India'=>'IN',
					'Indonesia'=>'ID',
					'Installations in International Waters'=>'XZ',
					'Iran, Islamic Republic of'=>'IR',
					'Iraq'=>'IQ',
					'Ireland'=>'IE',
					'Isle of Man'=>'IM',
					'Israel'=>'IL',
					'Italy'=>'IT',
					'Jamaica'=>'JM',
					'Japan'=>'JP',
					'Jersey'=>'JE',
					'Jordan'=>'JO',
					'Kazakhstan'=>'KZ',
					'Kenya'=>'KE',
					'Kiribati'=>'KI',
					'Korea, Democratic People\'s Republic of'=>'KP',
					'Korea, Republic of'=>'KR',
					'Kuwait'=>'KW',
					'Kyrgyzstan'=>'KG',
					'Lao People\'s Democratic Republic'=>'LA',
					'Latvia'=>'LV',
					'Lebanon'=>'LB',
					'Lesotho'=>'LS',
					'Liberia'=>'LR',
					'Libyan Arab Jamahiriya'=>'LY',
					'Liechtenstein'=>'LI',
					'Lithuania'=>'LT',
					'Luxembourg'=>'LU',
					'Macao'=>'MO',
					'Macedonia, The former Yugoslav Republic of'=>'MK',
					'Madagascar'=>'MG',
					'Malawi'=>'MW',
					'Malaysia'=>'MY',
					'Maldives'=>'MV',
					'Mali'=>'ML',
					'Malta'=>'MT',
					'Marshall Islands'=>'MH',
					'Martinique'=>'MQ',
					'Mauritania'=>'MR',
					'Mauritius'=>'MU',
					'Mayotte'=>'YT',
					'Mexico'=>'MX',
					'Micronesia, Federated States of'=>'FM',
					'Moldova, Republic of'=>'MD',
					'Monaco'=>'MC',
					'Mongolia'=>'MN',
					'Montenegro'=>'ME',
					'Montserrat'=>'MS',
					'Morocco'=>'MA',
					'Mozambique'=>'MZ',
					'Myanmar'=>'MM',
					'Namibia'=>'NA',
					'Nauru'=>'NR',
					'Nepal'=>'NP',
					'Netherlands'=>'NL',
					'New Caledonia'=>'NC',
					'New Zealand'=>'NZ',
					'Nicaragua'=>'NI',
					'Niger'=>'NE',
					'Nigeria'=>'NG',
					'Niue'=>'NU',
					'Norfolk Island'=>'NF',
					'Northern Mariana Islands'=>'MP',
					'Norway'=>'NO',
					'Oman'=>'OM',
					'Pakistan'=>'PK',
					'Palau'=>'PW',
					'Palestinian Territory, Occupied'=>'PS',
					'Panama'=>'PA',
					'Papua New Guinea'=>'PG',
					'Paraguay'=>'PY',
					'Peru'=>'PE',
					'Philippines'=>'PH',
					'Pitcairn'=>'PN',
					'Poland'=>'PL',
					'Portugal'=>'PT',
					'Puerto Rico'=>'PR',
					'Qatar'=>'QA',
					'Reunion'=>'RE',
					'Romania'=>'RO',
					'Russian Federation'=>'RU',
					'Rwanda'=>'RW',
					'Saint Helena'=>'SH',
					'Saint Kitts and Nevis'=>'KN',
					'Saint Lucia'=>'LC',
					'Saint Pierre and Miquelon'=>'PM',
					'Saint Vincent and the Grenadines'=>'VC',
					'Samoa'=>'WS',
					'San Marino'=>'SM',
					'Sao Tome and Principe'=>'ST',
					'Saudi Arabia'=>'SA',
					'Senegal'=>'SN',
					'Serbia'=>'RS',
					'Seychelles'=>'SC',
					'Sierra Leone'=>'SL',
					'Singapore'=>'SG',
					'Sint Maarten (Dutch Part)'=>'SX',
					'Slovakia'=>'SK',
					'Slovenia'=>'SI',
					'Solomon Islands'=>'SB',
					'Somalia'=>'SO',
					'South Africa'=>'ZA',
					'South Georgia and the South Sandwich Islands'=>'GS',
					'South Sudan'=>'SS',
					'Spain'=>'ES',
					'Sri Lanka'=>'LK',
					'Sudan'=>'SD',
					'Suriname'=>'SR',
					'Svalbard and Jan Mayen'=>'SJ',
					'Swaziland'=>'SZ',
					'Sweden'=>'SE',
					'Switzerland'=>'CH',
					'Syrian Arab Republic'=>'SY',
					'Taiwan, Province of China'=>'TW',
					'Tajikistan'=>'TJ',
					'Tanzania, United Republic of'=>'TZ',
					'Thailand'=>'TH',
					'Timor-Leste'=>'TL',
					'Togo'=>'TG',
					'Tokelau'=>'TK',
					'Tonga'=>'TO',
					'Trinidad and Tobago'=>'TT',
					'Tunisia'=>'TN',
					'Turkey'=>'TR',
					'Turkmenistan'=>'TM',
					'Turks and Caicos Islands'=>'TC',
					'Tuvalu'=>'TV',
					'Uganda'=>'UG',
					'Ukraine'=>'UA',
					'United Arab Emirates'=>'AE',
					'United Kingdom'=>'GB',
					'United States'=>'US',
					'United States Minor Outlying Islands'=>'UM',
					'Uruguay'=>'UY',
					'Uzbekistan'=>'UZ',
					'Vanuatu'=>'VU',
					'Venezuela'=>'VE',
					'Viet Nam'=>'VN',
					'Virgin Islands, British'=>'VG',
					'Virgin Islands, U.S.'=>'VI',
					'Wallis and Futuna'=>'WF',
					'Western Sahara'=>'EH',
					'Yemen'=>'YE',
					'Zambia'=>'ZM',
					'Zimbabwe'=>'ZW',
					) ;


	foreach ( $terms as $term_machine_name => $term_ISO2 ) {

		$countries = taxonomy_get_term_by_name( $term_machine_name ) ;
		if ( !empty( $countries ) ) {
			foreach ( $countries as $CID => $country ) {
			// one can only hope countries dict contains only unique values. 
				$country->field_iso2['und'][0]['value'] = $term_ISO2;
				krumo($country);
				taxonomy_term_save($country);
			}
		}
	}



	echo "bau!" ;

}