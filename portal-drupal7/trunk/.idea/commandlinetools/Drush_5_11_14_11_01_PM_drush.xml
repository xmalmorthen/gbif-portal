<?xml version="1.0" encoding="UTF-8"?>
<framework xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="schemas/frameworkDescriptionVersion1.1.3.xsd" frameworkId="ws.drush" name="Drush_5/11/14 11:01 PM_drush" invoke="/usr/local/zend/bin/drush" alias="drush" enabled="true" version="2">
  <command>
    <name>archive-dump</name>
    <help><![CDATA[<html>Backup your code, files, and database into a single file.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">sites</td></td>Optional. Site specifications, delimited by commas. Typically, list subdirectory name(s) under /sites.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">description</td></td>Describe the archive contents.</td></tr><tr><td valign="baseline">tags</td></td>Add tags to the archive manifest. Delimit multiple by commas.</td></tr><tr><td valign="baseline">destination</td></td>The full path and filename in which the archive should be stored. If omitted, it will be saved to the drush-backups directory and a filename will be generated.</td></tr><tr><td valign="baseline">overwrite</td></td>Do not fail if the destination file exists; overwrite it instead.</td></tr><tr><td valign="baseline">generator</td></td>The generator name to store in the MANIFEST file. The default is "Drush archive-dump".</td></tr><tr><td valign="baseline">generatorversion</td></td>The generator version number to store in the MANIFEST file. The default is 6.2.0.</td></tr><tr><td valign="baseline">pipe</td></td>Only print the destination of the archive. Useful for scripts that don't pass --destination.</td></tr><tr><td valign="baseline">preserve-symlinks</td></td>Preserve symbolic links.</td></tr><tr><td valign="baseline">no-core</td></td>Exclude Drupal core, so the backup only contains the site specific stuff.</td></tr><tr><td valign="baseline">tar-options</td></td>Options passed thru to the tar command.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush archive-dump default,example.com,foo.com</td></td>Write an archive containing 3 sites in it.</td></tr><tr><td valign="baseline">drush archive-dump @sites</td></td>Save archive containing all sites in a multi-site.</td></tr><tr><td valign="baseline">drush archive-dump default --destination=/backups/mysite.tar</td></td>Save archive to custom location.</td></tr><tr><td valign="baseline">drush archive-dump --tar-options="--exclude=.git --exclude=sites/default/files"</td></td>Omits any .git directories found in the tree as well as sites/default/files.</td></tr><tr><td valign="baseline">drush archive-dump --tar-options="--exclude=%files"</td></td>Placeholder %files is replaced with the real path for the current site, and that path is excluded.</td></tr></table><br/> </html>]]></help>
    <params>sites[=null]</params>
  </command>
  <command>
    <name>ard</name>
    <help><![CDATA[<html>Backup your code, files, and database into a single file.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">sites</td></td>Optional. Site specifications, delimited by commas. Typically, list subdirectory name(s) under /sites.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">description</td></td>Describe the archive contents.</td></tr><tr><td valign="baseline">tags</td></td>Add tags to the archive manifest. Delimit multiple by commas.</td></tr><tr><td valign="baseline">destination</td></td>The full path and filename in which the archive should be stored. If omitted, it will be saved to the drush-backups directory and a filename will be generated.</td></tr><tr><td valign="baseline">overwrite</td></td>Do not fail if the destination file exists; overwrite it instead.</td></tr><tr><td valign="baseline">generator</td></td>The generator name to store in the MANIFEST file. The default is "Drush archive-dump".</td></tr><tr><td valign="baseline">generatorversion</td></td>The generator version number to store in the MANIFEST file. The default is 6.2.0.</td></tr><tr><td valign="baseline">pipe</td></td>Only print the destination of the archive. Useful for scripts that don't pass --destination.</td></tr><tr><td valign="baseline">preserve-symlinks</td></td>Preserve symbolic links.</td></tr><tr><td valign="baseline">no-core</td></td>Exclude Drupal core, so the backup only contains the site specific stuff.</td></tr><tr><td valign="baseline">tar-options</td></td>Options passed thru to the tar command.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush archive-dump default,example.com,foo.com</td></td>Write an archive containing 3 sites in it.</td></tr><tr><td valign="baseline">drush archive-dump @sites</td></td>Save archive containing all sites in a multi-site.</td></tr><tr><td valign="baseline">drush archive-dump default --destination=/backups/mysite.tar</td></td>Save archive to custom location.</td></tr><tr><td valign="baseline">drush archive-dump --tar-options="--exclude=.git --exclude=sites/default/files"</td></td>Omits any .git directories found in the tree as well as sites/default/files.</td></tr><tr><td valign="baseline">drush archive-dump --tar-options="--exclude=%files"</td></td>Placeholder %files is replaced with the real path for the current site, and that path is excluded.</td></tr></table><br/> </html>]]></help>
    <params>sites[=null]</params>
  </command>
  <command>
    <name>archive-backup</name>
    <help><![CDATA[<html>Backup your code, files, and database into a single file.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">sites</td></td>Optional. Site specifications, delimited by commas. Typically, list subdirectory name(s) under /sites.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">description</td></td>Describe the archive contents.</td></tr><tr><td valign="baseline">tags</td></td>Add tags to the archive manifest. Delimit multiple by commas.</td></tr><tr><td valign="baseline">destination</td></td>The full path and filename in which the archive should be stored. If omitted, it will be saved to the drush-backups directory and a filename will be generated.</td></tr><tr><td valign="baseline">overwrite</td></td>Do not fail if the destination file exists; overwrite it instead.</td></tr><tr><td valign="baseline">generator</td></td>The generator name to store in the MANIFEST file. The default is "Drush archive-dump".</td></tr><tr><td valign="baseline">generatorversion</td></td>The generator version number to store in the MANIFEST file. The default is 6.2.0.</td></tr><tr><td valign="baseline">pipe</td></td>Only print the destination of the archive. Useful for scripts that don't pass --destination.</td></tr><tr><td valign="baseline">preserve-symlinks</td></td>Preserve symbolic links.</td></tr><tr><td valign="baseline">no-core</td></td>Exclude Drupal core, so the backup only contains the site specific stuff.</td></tr><tr><td valign="baseline">tar-options</td></td>Options passed thru to the tar command.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush archive-dump default,example.com,foo.com</td></td>Write an archive containing 3 sites in it.</td></tr><tr><td valign="baseline">drush archive-dump @sites</td></td>Save archive containing all sites in a multi-site.</td></tr><tr><td valign="baseline">drush archive-dump default --destination=/backups/mysite.tar</td></td>Save archive to custom location.</td></tr><tr><td valign="baseline">drush archive-dump --tar-options="--exclude=.git --exclude=sites/default/files"</td></td>Omits any .git directories found in the tree as well as sites/default/files.</td></tr><tr><td valign="baseline">drush archive-dump --tar-options="--exclude=%files"</td></td>Placeholder %files is replaced with the real path for the current site, and that path is excluded.</td></tr></table><br/> </html>]]></help>
    <params>sites[=null]</params>
  </command>
  <command>
    <name>arb</name>
    <help><![CDATA[<html>Backup your code, files, and database into a single file.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">sites</td></td>Optional. Site specifications, delimited by commas. Typically, list subdirectory name(s) under /sites.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">description</td></td>Describe the archive contents.</td></tr><tr><td valign="baseline">tags</td></td>Add tags to the archive manifest. Delimit multiple by commas.</td></tr><tr><td valign="baseline">destination</td></td>The full path and filename in which the archive should be stored. If omitted, it will be saved to the drush-backups directory and a filename will be generated.</td></tr><tr><td valign="baseline">overwrite</td></td>Do not fail if the destination file exists; overwrite it instead.</td></tr><tr><td valign="baseline">generator</td></td>The generator name to store in the MANIFEST file. The default is "Drush archive-dump".</td></tr><tr><td valign="baseline">generatorversion</td></td>The generator version number to store in the MANIFEST file. The default is 6.2.0.</td></tr><tr><td valign="baseline">pipe</td></td>Only print the destination of the archive. Useful for scripts that don't pass --destination.</td></tr><tr><td valign="baseline">preserve-symlinks</td></td>Preserve symbolic links.</td></tr><tr><td valign="baseline">no-core</td></td>Exclude Drupal core, so the backup only contains the site specific stuff.</td></tr><tr><td valign="baseline">tar-options</td></td>Options passed thru to the tar command.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush archive-dump default,example.com,foo.com</td></td>Write an archive containing 3 sites in it.</td></tr><tr><td valign="baseline">drush archive-dump @sites</td></td>Save archive containing all sites in a multi-site.</td></tr><tr><td valign="baseline">drush archive-dump default --destination=/backups/mysite.tar</td></td>Save archive to custom location.</td></tr><tr><td valign="baseline">drush archive-dump --tar-options="--exclude=.git --exclude=sites/default/files"</td></td>Omits any .git directories found in the tree as well as sites/default/files.</td></tr><tr><td valign="baseline">drush archive-dump --tar-options="--exclude=%files"</td></td>Placeholder %files is replaced with the real path for the current site, and that path is excluded.</td></tr></table><br/> </html>]]></help>
    <params>sites[=null]</params>
  </command>
  <command>
    <name>archive-restore</name>
    <help><![CDATA[<html>Expand a site archive into a Drupal web site.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">file</td></td>The site archive file that should be expanded.</td></tr><tr><td valign="baseline">site_name</td></td>Optional. Which site within the archive you want to restore. Defaults to all.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">destination</td></td>Specify where the Drupal site should be expanded, including the docroot. Defaults to the current working directory.</td></tr><tr><td valign="baseline">db-prefix</td></td>An optional table prefix to use during restore.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL indicating the target for database restore. If not provided, the archived settings.php is used.</td></tr><tr><td valign="baseline">db-su</td></td>Account to use when creating the new database. Optional.</td></tr><tr><td valign="baseline">db-su-pw</td></td>Password for the "db-su" account. Optional.</td></tr><tr><td valign="baseline">overwrite</td></td>Allow drush to overwrite any files in the destination.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush archive-restore ./example.tar.gz</td></td>Restore the files and databases for all sites in the archive.</td></tr><tr><td valign="baseline">drush archive-restore ./example.tar.gz example.com</td></td>Restore the files and database for example.com site.</td></tr><tr><td valign="baseline">drush archive-restore ./example.tar.gz --destination=/var/www/example.com/docroot</td></td>Restore archive to a custom location.</td></tr><tr><td valign="baseline">drush archive-restore ./example.tar.gz --db-url=mysql://root:pass@127.0.0.1/dbname</td></td>Restore archive to a new database (and customize settings.php to point there.).</td></tr></table><br/> </html>]]></help>
    <params>file site_name[=null]</params>
  </command>
  <command>
    <name>arr</name>
    <help><![CDATA[<html>Expand a site archive into a Drupal web site.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">file</td></td>The site archive file that should be expanded.</td></tr><tr><td valign="baseline">site_name</td></td>Optional. Which site within the archive you want to restore. Defaults to all.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">destination</td></td>Specify where the Drupal site should be expanded, including the docroot. Defaults to the current working directory.</td></tr><tr><td valign="baseline">db-prefix</td></td>An optional table prefix to use during restore.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL indicating the target for database restore. If not provided, the archived settings.php is used.</td></tr><tr><td valign="baseline">db-su</td></td>Account to use when creating the new database. Optional.</td></tr><tr><td valign="baseline">db-su-pw</td></td>Password for the "db-su" account. Optional.</td></tr><tr><td valign="baseline">overwrite</td></td>Allow drush to overwrite any files in the destination.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush archive-restore ./example.tar.gz</td></td>Restore the files and databases for all sites in the archive.</td></tr><tr><td valign="baseline">drush archive-restore ./example.tar.gz example.com</td></td>Restore the files and database for example.com site.</td></tr><tr><td valign="baseline">drush archive-restore ./example.tar.gz --destination=/var/www/example.com/docroot</td></td>Restore archive to a custom location.</td></tr><tr><td valign="baseline">drush archive-restore ./example.tar.gz --db-url=mysql://root:pass@127.0.0.1/dbname</td></td>Restore archive to a new database (and customize settings.php to point there.).</td></tr></table><br/> </html>]]></help>
    <params>file site_name[=null]</params>
  </command>
  <command>
    <name>cache-clear</name>
    <help><![CDATA[<html>Clear a specific cache, or all drupal caches.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">type</td></td>The particular cache to clear. Omit this argument to choose from available caches.</td></tr></table><br/> No options<br/> </html>]]></help>
    <params>type[=null]</params>
  </command>
  <command>
    <name>cc</name>
    <help><![CDATA[<html>Clear a specific cache, or all drupal caches.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">type</td></td>The particular cache to clear. Omit this argument to choose from available caches.</td></tr></table><br/> No options<br/> </html>]]></help>
    <params>type[=null]</params>
  </command>
  <command>
    <name>cache-get</name>
    <help><![CDATA[<html>Fetch a cached object and display it.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">cid</td></td>The id of the object to fetch.</td></tr><tr><td valign="baseline">bin</td></td>Optional. The cache bin to fetch from.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: print-r, json, var_export, yaml. Default is print-r.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush cache-get schema</td></td>Display the data for the cache id "schema" from the "cache" bin.</td></tr><tr><td valign="baseline">drush cache-get update_available_releases update</td></td>Display the data for the cache id "update_available_releases" from the "update" bin.</td></tr></table><br/> </html>]]></help>
    <params>cid bin[=null]</params>
  </command>
  <command>
    <name>cg</name>
    <help><![CDATA[<html>Fetch a cached object and display it.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">cid</td></td>The id of the object to fetch.</td></tr><tr><td valign="baseline">bin</td></td>Optional. The cache bin to fetch from.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: print-r, json, var_export, yaml. Default is print-r.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush cache-get schema</td></td>Display the data for the cache id "schema" from the "cache" bin.</td></tr><tr><td valign="baseline">drush cache-get update_available_releases update</td></td>Display the data for the cache id "update_available_releases" from the "update" bin.</td></tr></table><br/> </html>]]></help>
    <params>cid bin[=null]</params>
  </command>
  <command>
    <name>cache-set</name>
    <help><![CDATA[<html>Cache an object expressed in JSON or var_export() format.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">cid</td></td>The id of the object to set.</td></tr><tr><td valign="baseline">data</td></td>The object to set in the cache. Use '-' to read the object from STDIN.</td></tr><tr><td valign="baseline">bin</td></td>Optional. The cache bin to store the object in.</td></tr><tr><td valign="baseline">expire</td></td>Optional. CACHE_PERMANENT, CACHE_TEMPORARY, or a Unix timestamp.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Format to parse the object. Use "string" for string (default), and "json" for JSON.</td></tr><tr><td valign="baseline">cache-get</td></td>If the object is the result a previous fetch from the cache, only store the value in the "data" property of the object in the cache.</td></tr></table><br/> </html>]]></help>
    <params>cid data bin[=null] expire[=null]</params>
  </command>
  <command>
    <name>cs</name>
    <help><![CDATA[<html>Cache an object expressed in JSON or var_export() format.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">cid</td></td>The id of the object to set.</td></tr><tr><td valign="baseline">data</td></td>The object to set in the cache. Use '-' to read the object from STDIN.</td></tr><tr><td valign="baseline">bin</td></td>Optional. The cache bin to store the object in.</td></tr><tr><td valign="baseline">expire</td></td>Optional. CACHE_PERMANENT, CACHE_TEMPORARY, or a Unix timestamp.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Format to parse the object. Use "string" for string (default), and "json" for JSON.</td></tr><tr><td valign="baseline">cache-get</td></td>If the object is the result a previous fetch from the cache, only store the value in the "data" property of the object in the cache.</td></tr></table><br/> </html>]]></help>
    <params>cid data bin[=null] expire[=null]</params>
  </command>
  <command>
    <name>core-config</name>
    <help><![CDATA[<html>Edit drushrc, site alias, and Drupal settings.php files.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">filter</td></td>A substring for filtering the list of files. Omit this argument to choose from loaded files.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">bg</td></td>Run editor in the background. Does not work with editors such as `vi` that run in the terminal.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-config</td></td>Pick from a list of config/alias/settings files. Open selected in editor.</td></tr><tr><td valign="baseline">drush --bg core-config</td></td>Return to shell prompt as soon as the editor window opens.</td></tr><tr><td valign="baseline">drush core-config etc</td></td>Edit the global configuration file.</td></tr><tr><td valign="baseline">drush core-config demo.alia</td></td>Edit a particular alias file.</td></tr><tr><td valign="baseline">drush core-config sett</td></td>Edit settings.php for the current Drupal site.</td></tr><tr><td valign="baseline">drush core-config --choice=2</td></td>Edit the second file in the choice list.</td></tr></table><br/> </html>]]></help>
    <params>filter[=null]</params>
  </command>
  <command>
    <name>conf</name>
    <help><![CDATA[<html>Edit drushrc, site alias, and Drupal settings.php files.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">filter</td></td>A substring for filtering the list of files. Omit this argument to choose from loaded files.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">bg</td></td>Run editor in the background. Does not work with editors such as `vi` that run in the terminal.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-config</td></td>Pick from a list of config/alias/settings files. Open selected in editor.</td></tr><tr><td valign="baseline">drush --bg core-config</td></td>Return to shell prompt as soon as the editor window opens.</td></tr><tr><td valign="baseline">drush core-config etc</td></td>Edit the global configuration file.</td></tr><tr><td valign="baseline">drush core-config demo.alia</td></td>Edit a particular alias file.</td></tr><tr><td valign="baseline">drush core-config sett</td></td>Edit settings.php for the current Drupal site.</td></tr><tr><td valign="baseline">drush core-config --choice=2</td></td>Edit the second file in the choice list.</td></tr></table><br/> </html>]]></help>
    <params>filter[=null]</params>
  </command>
  <command>
    <name>config</name>
    <help><![CDATA[<html>Edit drushrc, site alias, and Drupal settings.php files.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">filter</td></td>A substring for filtering the list of files. Omit this argument to choose from loaded files.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">bg</td></td>Run editor in the background. Does not work with editors such as `vi` that run in the terminal.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-config</td></td>Pick from a list of config/alias/settings files. Open selected in editor.</td></tr><tr><td valign="baseline">drush --bg core-config</td></td>Return to shell prompt as soon as the editor window opens.</td></tr><tr><td valign="baseline">drush core-config etc</td></td>Edit the global configuration file.</td></tr><tr><td valign="baseline">drush core-config demo.alia</td></td>Edit a particular alias file.</td></tr><tr><td valign="baseline">drush core-config sett</td></td>Edit settings.php for the current Drupal site.</td></tr><tr><td valign="baseline">drush core-config --choice=2</td></td>Edit the second file in the choice list.</td></tr></table><br/> </html>]]></help>
    <params>filter[=null]</params>
  </command>
  <command>
    <name>core-cron</name>
    <help><![CDATA[<html>Run all cron hooks in all active modules for specified site.<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>cron</name>
    <help><![CDATA[<html>Run all cron hooks in all active modules for specified site.<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>core-execute</name>
    <help><![CDATA[<html>Execute a shell command. Usually used with a site alias.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">command</td></td>The shell command to be executed.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">ssh-options</td></td>A string of extra options that will be passed to the ssh command (e.g. "-p 100")</td></tr><tr><td valign="baseline">tty</td></td>Create a tty (e.g. to run an interactive program).</td></tr><tr><td valign="baseline">escaped</td></td>Command string already escaped; do not add additional quoting.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-execute git pull origin rebase</td></td>Retrieve latest code from git</td></tr></table><br/> </html>]]></help>
    <params>command</params>
  </command>
  <command>
    <name>exec</name>
    <help><![CDATA[<html>Execute a shell command. Usually used with a site alias.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">command</td></td>The shell command to be executed.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">ssh-options</td></td>A string of extra options that will be passed to the ssh command (e.g. "-p 100")</td></tr><tr><td valign="baseline">tty</td></td>Create a tty (e.g. to run an interactive program).</td></tr><tr><td valign="baseline">escaped</td></td>Command string already escaped; do not add additional quoting.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-execute git pull origin rebase</td></td>Retrieve latest code from git</td></tr></table><br/> </html>]]></help>
    <params>command</params>
  </command>
  <command>
    <name>execute</name>
    <help><![CDATA[<html>Execute a shell command. Usually used with a site alias.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">command</td></td>The shell command to be executed.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">ssh-options</td></td>A string of extra options that will be passed to the ssh command (e.g. "-p 100")</td></tr><tr><td valign="baseline">tty</td></td>Create a tty (e.g. to run an interactive program).</td></tr><tr><td valign="baseline">escaped</td></td>Command string already escaped; do not add additional quoting.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-execute git pull origin rebase</td></td>Retrieve latest code from git</td></tr></table><br/> </html>]]></help>
    <params>command</params>
  </command>
  <command>
    <name>core-quick-drupal</name>
    <help><![CDATA[<html>Download, install, serve and login to Drupal with minimal configuration and dependencies.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">site</td></td>Short name for the site to be created - used as a directory name and as sqlite file name. Optional - if omitted timestamped "quick-drupal" directory will be used instead.</td></tr><tr><td valign="baseline">projects</td></td>A list of projects to download into the new site. If projects contain extensions (modules or themes) with the same name they will be enabled by default. See --enable option to control this behaviour further.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">core</td></td>Drupal core to download. Defaults to "drupal" (latest stable version).</td></tr><tr><td valign="baseline">use-existing</td></td>Use an existing Drupal root, specified with --root. Overrides --core.</td></tr><tr><td valign="baseline">profile</td></td>The install profile to use. Defaults to standard.</td></tr><tr><td valign="baseline">enable</td></td>Specific extensions (modules or themes) to enable. By default, extensions with the same name as requested projects will be enabled automatically.</td></tr><tr><td valign="baseline">server</td></td>Runserver option: Which http server to use - either: "cgi" for a CGI based httpserver (default, requires php 5.3 and php-cgi binary) or "builtin" for php 5.4 built in http server.</td></tr><tr><td valign="baseline">no-server</td></td>Avoid starting runserver (and browser) for the created Drupal site.</td></tr><tr><td valign="baseline">browser</td></td>Runserver option: If opening a web browser, which browser to user (defaults to operating system default).</td></tr><tr><td valign="baseline">use-name</td></td>Overrides "name" argument.</td></tr><tr><td valign="baseline">makefile</td></td>Makefile to use. Makefile must specify which version of Drupal core to build.</td></tr><tr><td valign="baseline">root</td></td>Path to Drupal root.</td></tr><tr><td valign="baseline">notes</td></td>Download option: Show release notes after each project is downloaded.</td></tr><tr><td valign="baseline">variant</td></td>Download option: Only useful for install profiles. Possible values: 'full', 'projects', 'profile-only'.</td></tr><tr><td valign="baseline">select</td></td>Download option: Select the version to download interactively from a list of available releases.</td></tr><tr><td valign="baseline">skip</td></td>Download option: Skip automatic downloading of libraries (c.f. devel).</td></tr><tr><td valign="baseline">pipe</td></td>Download option: Returns a list of the names of the extensions (modules and themes) contained in the downloaded projects.</td></tr><tr><td valign="baseline">db-url</td></td>Site install option: A Drupal 6 style database URL. Only required for initial install - not re-install.</td></tr><tr><td valign="baseline">db-prefix</td></td>Site install option: An optional table prefix to use for initial install. Can be a key-value array of tables/prefixes in a drushrc file (not the command line).</td></tr><tr><td valign="baseline">db-su</td></td>Site install option: Account to use when creating a new database. Must have Grant permission (mysql only). Optional.</td></tr><tr><td valign="baseline">db-su-pw</td></td>Site install option: Password for the "db-su" account. Optional.</td></tr><tr><td valign="baseline">account-name</td></td>Site install option: uid1 name. Defaults to admin</td></tr><tr><td valign="baseline">account-pass</td></td>Site install option: uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in drushrc.php.</td></tr><tr><td valign="baseline">account-mail</td></td>Site install option: uid1 email. Defaults to admin@example.com</td></tr><tr><td valign="baseline">locale</td></td>Site install option: A short language code. Sets the default site language. Language files must already be present. You may use download command to get them.</td></tr><tr><td valign="baseline">clean-url</td></td>Site install option: Defaults to 1</td></tr><tr><td valign="baseline">site-name</td></td>Site install option: Defaults to Site-Install</td></tr><tr><td valign="baseline">site-mail</td></td>Site install option: From: for system mailings. Defaults to admin@example.com</td></tr><tr><td valign="baseline">php-cgi</td></td>Runserver option: Name of the php-cgi binary. If it is not on your current $PATH you should include the full path. You can include command line parameters to pass into php-cgi.</td></tr><tr><td valign="baseline">variables</td></td>Runserver option: Key-value array of variables to override in the $conf array for the running site. By default disables drupal_http_request_fails to avoid errors on Windows (which supports only one connection at a time). Comma delimited list of name=value pairs (or array in drushrc).</td></tr><tr><td valign="baseline">default-server</td></td>Runserver option: A default addr:port/path to use for any values not specified as an argument.</td></tr><tr><td valign="baseline">dns</td></td>Runserver option: Resolve hostnames/IPs using DNS/rDNS (if possible) to determine binding IPs and/or human friendly hostnames for URLs and browser.</td></tr><tr><td valign="baseline">version-control=backup</td></td>Backup all project files before updates.</td></tr><tr><td valign="baseline">version-control=bzr</td></td>Quickly add/remove/commit your project changes to Bazaar.</td></tr><tr><td valign="baseline">version-control=svn</td></td>Quickly add/remove/commit your project changes to Subversion.</td></tr><tr><td valign="baseline">cache</td></td>Cache release XML and tarballs or git clones. Git clones use git's --reference option.</td></tr><tr><td valign="baseline">package-handler=wget</td></td>Download project packages using wget or curl.</td></tr><tr><td valign="baseline">package-handler=git_drupalorg</td></td>Use git.drupal.org to checkout and update projects.</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush qd</td></td>Download and install stable release of Drupal into a timestamped directory, start server, and open the site logged in as admin.</td></tr><tr><td valign="baseline">drush qd --profile=minimal --dev --cache --core=drupal-8.x --yes</td></td>Fire up dev release of Drupal site with minimal install profile.</td></tr><tr><td valign="baseline">drush qd testsite devel --server=:8081/admin --browser=firefox --cache --yes</td></td>Fire up stable release (using the cache) of Drupal site called "testsite", download and enable devel module, start a server on port 8081 and open /admin in firefox.</td></tr><tr><td valign="baseline">drush qd commercesite --core=commerce_kickstart --profile=commerce_kickstart --cache --yes --watchdog</td></td>Download and install the "Commerce Kickstart" distribution/install profile, display watchdog messages on the server console.</td></tr><tr><td valign="baseline">drush qd --makefile=mysite.make</td></td>Create and install a site from a makefile.</td></tr></table><br/> </html>]]></help>
    <params>site[=null] projects[=null]</params>
  </command>
  <command>
    <name>qd</name>
    <help><![CDATA[<html>Download, install, serve and login to Drupal with minimal configuration and dependencies.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">site</td></td>Short name for the site to be created - used as a directory name and as sqlite file name. Optional - if omitted timestamped "quick-drupal" directory will be used instead.</td></tr><tr><td valign="baseline">projects</td></td>A list of projects to download into the new site. If projects contain extensions (modules or themes) with the same name they will be enabled by default. See --enable option to control this behaviour further.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">core</td></td>Drupal core to download. Defaults to "drupal" (latest stable version).</td></tr><tr><td valign="baseline">use-existing</td></td>Use an existing Drupal root, specified with --root. Overrides --core.</td></tr><tr><td valign="baseline">profile</td></td>The install profile to use. Defaults to standard.</td></tr><tr><td valign="baseline">enable</td></td>Specific extensions (modules or themes) to enable. By default, extensions with the same name as requested projects will be enabled automatically.</td></tr><tr><td valign="baseline">server</td></td>Runserver option: Which http server to use - either: "cgi" for a CGI based httpserver (default, requires php 5.3 and php-cgi binary) or "builtin" for php 5.4 built in http server.</td></tr><tr><td valign="baseline">no-server</td></td>Avoid starting runserver (and browser) for the created Drupal site.</td></tr><tr><td valign="baseline">browser</td></td>Runserver option: If opening a web browser, which browser to user (defaults to operating system default).</td></tr><tr><td valign="baseline">use-name</td></td>Overrides "name" argument.</td></tr><tr><td valign="baseline">makefile</td></td>Makefile to use. Makefile must specify which version of Drupal core to build.</td></tr><tr><td valign="baseline">root</td></td>Path to Drupal root.</td></tr><tr><td valign="baseline">notes</td></td>Download option: Show release notes after each project is downloaded.</td></tr><tr><td valign="baseline">variant</td></td>Download option: Only useful for install profiles. Possible values: 'full', 'projects', 'profile-only'.</td></tr><tr><td valign="baseline">select</td></td>Download option: Select the version to download interactively from a list of available releases.</td></tr><tr><td valign="baseline">skip</td></td>Download option: Skip automatic downloading of libraries (c.f. devel).</td></tr><tr><td valign="baseline">pipe</td></td>Download option: Returns a list of the names of the extensions (modules and themes) contained in the downloaded projects.</td></tr><tr><td valign="baseline">db-url</td></td>Site install option: A Drupal 6 style database URL. Only required for initial install - not re-install.</td></tr><tr><td valign="baseline">db-prefix</td></td>Site install option: An optional table prefix to use for initial install. Can be a key-value array of tables/prefixes in a drushrc file (not the command line).</td></tr><tr><td valign="baseline">db-su</td></td>Site install option: Account to use when creating a new database. Must have Grant permission (mysql only). Optional.</td></tr><tr><td valign="baseline">db-su-pw</td></td>Site install option: Password for the "db-su" account. Optional.</td></tr><tr><td valign="baseline">account-name</td></td>Site install option: uid1 name. Defaults to admin</td></tr><tr><td valign="baseline">account-pass</td></td>Site install option: uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in drushrc.php.</td></tr><tr><td valign="baseline">account-mail</td></td>Site install option: uid1 email. Defaults to admin@example.com</td></tr><tr><td valign="baseline">locale</td></td>Site install option: A short language code. Sets the default site language. Language files must already be present. You may use download command to get them.</td></tr><tr><td valign="baseline">clean-url</td></td>Site install option: Defaults to 1</td></tr><tr><td valign="baseline">site-name</td></td>Site install option: Defaults to Site-Install</td></tr><tr><td valign="baseline">site-mail</td></td>Site install option: From: for system mailings. Defaults to admin@example.com</td></tr><tr><td valign="baseline">php-cgi</td></td>Runserver option: Name of the php-cgi binary. If it is not on your current $PATH you should include the full path. You can include command line parameters to pass into php-cgi.</td></tr><tr><td valign="baseline">variables</td></td>Runserver option: Key-value array of variables to override in the $conf array for the running site. By default disables drupal_http_request_fails to avoid errors on Windows (which supports only one connection at a time). Comma delimited list of name=value pairs (or array in drushrc).</td></tr><tr><td valign="baseline">default-server</td></td>Runserver option: A default addr:port/path to use for any values not specified as an argument.</td></tr><tr><td valign="baseline">dns</td></td>Runserver option: Resolve hostnames/IPs using DNS/rDNS (if possible) to determine binding IPs and/or human friendly hostnames for URLs and browser.</td></tr><tr><td valign="baseline">version-control=backup</td></td>Backup all project files before updates.</td></tr><tr><td valign="baseline">version-control=bzr</td></td>Quickly add/remove/commit your project changes to Bazaar.</td></tr><tr><td valign="baseline">version-control=svn</td></td>Quickly add/remove/commit your project changes to Subversion.</td></tr><tr><td valign="baseline">cache</td></td>Cache release XML and tarballs or git clones. Git clones use git's --reference option.</td></tr><tr><td valign="baseline">package-handler=wget</td></td>Download project packages using wget or curl.</td></tr><tr><td valign="baseline">package-handler=git_drupalorg</td></td>Use git.drupal.org to checkout and update projects.</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush qd</td></td>Download and install stable release of Drupal into a timestamped directory, start server, and open the site logged in as admin.</td></tr><tr><td valign="baseline">drush qd --profile=minimal --dev --cache --core=drupal-8.x --yes</td></td>Fire up dev release of Drupal site with minimal install profile.</td></tr><tr><td valign="baseline">drush qd testsite devel --server=:8081/admin --browser=firefox --cache --yes</td></td>Fire up stable release (using the cache) of Drupal site called "testsite", download and enable devel module, start a server on port 8081 and open /admin in firefox.</td></tr><tr><td valign="baseline">drush qd commercesite --core=commerce_kickstart --profile=commerce_kickstart --cache --yes --watchdog</td></td>Download and install the "Commerce Kickstart" distribution/install profile, display watchdog messages on the server console.</td></tr><tr><td valign="baseline">drush qd --makefile=mysite.make</td></td>Create and install a site from a makefile.</td></tr></table><br/> </html>]]></help>
    <params>site[=null] projects[=null]</params>
  </command>
  <command>
    <name>core-requirements</name>
    <help><![CDATA[<html>Provides information about things that may be wrong in your Drupal installation, if any.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">severity</td></td>Only show status report messages with a severity greater than or equal to the specified value.</td></tr><tr><td valign="baseline">ignore</td></td>Comma-separated list of requirements to remove from output. Run with --pipe to see key values to use.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-requirements</td></td>Show all status lines from the Status Report admin page.</td></tr><tr><td valign="baseline">drush core-requirements --severity=2</td></td>Show only the red lines from the Status Report admin page.</td></tr><tr><td valign="baseline">drush core-requirements --pipe</td></td>Print out a short report in JSON format, where severity 2=error, 1=warning, and 0/-1=OK</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>status-report</name>
    <help><![CDATA[<html>Provides information about things that may be wrong in your Drupal installation, if any.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">severity</td></td>Only show status report messages with a severity greater than or equal to the specified value.</td></tr><tr><td valign="baseline">ignore</td></td>Comma-separated list of requirements to remove from output. Run with --pipe to see key values to use.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-requirements</td></td>Show all status lines from the Status Report admin page.</td></tr><tr><td valign="baseline">drush core-requirements --severity=2</td></td>Show only the red lines from the Status Report admin page.</td></tr><tr><td valign="baseline">drush core-requirements --pipe</td></td>Print out a short report in JSON format, where severity 2=error, 1=warning, and 0/-1=OK</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>rq</name>
    <help><![CDATA[<html>Provides information about things that may be wrong in your Drupal installation, if any.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">severity</td></td>Only show status report messages with a severity greater than or equal to the specified value.</td></tr><tr><td valign="baseline">ignore</td></td>Comma-separated list of requirements to remove from output. Run with --pipe to see key values to use.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-requirements</td></td>Show all status lines from the Status Report admin page.</td></tr><tr><td valign="baseline">drush core-requirements --severity=2</td></td>Show only the red lines from the Status Report admin page.</td></tr><tr><td valign="baseline">drush core-requirements --pipe</td></td>Print out a short report in JSON format, where severity 2=error, 1=warning, and 0/-1=OK</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>core-rsync</name>
    <help><![CDATA[<html>Rsync the Drupal tree to/from another server using ssh.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">source</td></td>May be rsync path or site alias. See rsync documentation and example.aliases.drushrc.php.</td></tr><tr><td valign="baseline">destination</td></td>May be rsync path or site alias. See rsync documentation and example.aliases.drushrc.php.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">mode</td></td>The unary flags to pass to rsync; --mode=rultz implies rsync -rultz. Default is -akz.</td></tr><tr><td valign="baseline">exclude-conf</td></td>Excludes settings.php from being rsynced. Default.</td></tr><tr><td valign="baseline">include-conf</td></td>Allow settings.php to be rsynced. Default is to exclude settings.php.</td></tr><tr><td valign="baseline">include-vcs</td></td>Include special version control directories (e.g. .svn). Default is to exclude vcs files.</td></tr><tr><td valign="baseline">exclude-files</td></td>Exclude the files directory.</td></tr><tr><td valign="baseline">exclude-sites</td></td>Exclude all directories in "sites/" except for "sites/all".</td></tr><tr><td valign="baseline">exclude-other-sites</td></td>Exclude all directories in "sites/" except for "sites/all" and the site directory for the site being synced. Note: if the site directory is different between the source and destination, use --exclude-sites followed by "drush rsync @from:%site @to:%site"</td></tr><tr><td valign="baseline">exclude-paths</td></td>List of paths to exclude, seperated by : (Unix-based systems) or ; (Windows).</td></tr><tr><td valign="baseline">include-paths</td></td>List of paths to include, seperated by : (Unix-based systems) or ; (Windows).</td></tr><tr><td valign="baseline">{rsync-option-name}</td></td>Replace {rsync-option-name} with the rsync option (or option='value') that you would like to pass through to rsync. Examples include --delete, --exclude=*.sql, --filter='merge /etc/rsync/default.rules', etc. See the rsync documentation for a complete explaination of all the rsync options and values.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush rsync @dev @stage</td></td>Rsync Drupal root from Drush alias dev to the alias stage (one of which must be local).</td></tr><tr><td valign="baseline">drush rsync ./ @stage:%files/img</td></td>Rsync all files in the current directory to the 'img' directory in the file storage folder on the Drush alias stage.</td></tr><tr><td valign="baseline">drush -s rsync @dev @stage --exclude=*.sql --delete</td></td>Simulate Rsync Drupal root from the Drush alias dev to the alias stage (one of which must be local), excluding all files that match the filter '*.sql' and delete all files on the destination that are no longer on the source.</td></tr></table><br/> </html>]]></help>
    <params>source[=null] destination[=null]</params>
  </command>
  <command>
    <name>rsync</name>
    <help><![CDATA[<html>Rsync the Drupal tree to/from another server using ssh.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">source</td></td>May be rsync path or site alias. See rsync documentation and example.aliases.drushrc.php.</td></tr><tr><td valign="baseline">destination</td></td>May be rsync path or site alias. See rsync documentation and example.aliases.drushrc.php.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">mode</td></td>The unary flags to pass to rsync; --mode=rultz implies rsync -rultz. Default is -akz.</td></tr><tr><td valign="baseline">exclude-conf</td></td>Excludes settings.php from being rsynced. Default.</td></tr><tr><td valign="baseline">include-conf</td></td>Allow settings.php to be rsynced. Default is to exclude settings.php.</td></tr><tr><td valign="baseline">include-vcs</td></td>Include special version control directories (e.g. .svn). Default is to exclude vcs files.</td></tr><tr><td valign="baseline">exclude-files</td></td>Exclude the files directory.</td></tr><tr><td valign="baseline">exclude-sites</td></td>Exclude all directories in "sites/" except for "sites/all".</td></tr><tr><td valign="baseline">exclude-other-sites</td></td>Exclude all directories in "sites/" except for "sites/all" and the site directory for the site being synced. Note: if the site directory is different between the source and destination, use --exclude-sites followed by "drush rsync @from:%site @to:%site"</td></tr><tr><td valign="baseline">exclude-paths</td></td>List of paths to exclude, seperated by : (Unix-based systems) or ; (Windows).</td></tr><tr><td valign="baseline">include-paths</td></td>List of paths to include, seperated by : (Unix-based systems) or ; (Windows).</td></tr><tr><td valign="baseline">{rsync-option-name}</td></td>Replace {rsync-option-name} with the rsync option (or option='value') that you would like to pass through to rsync. Examples include --delete, --exclude=*.sql, --filter='merge /etc/rsync/default.rules', etc. See the rsync documentation for a complete explaination of all the rsync options and values.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush rsync @dev @stage</td></td>Rsync Drupal root from Drush alias dev to the alias stage (one of which must be local).</td></tr><tr><td valign="baseline">drush rsync ./ @stage:%files/img</td></td>Rsync all files in the current directory to the 'img' directory in the file storage folder on the Drush alias stage.</td></tr><tr><td valign="baseline">drush -s rsync @dev @stage --exclude=*.sql --delete</td></td>Simulate Rsync Drupal root from the Drush alias dev to the alias stage (one of which must be local), excluding all files that match the filter '*.sql' and delete all files on the destination that are no longer on the source.</td></tr></table><br/> </html>]]></help>
    <params>source[=null] destination[=null]</params>
  </command>
  <command>
    <name>core-status</name>
    <help><![CDATA[<html>Provides a birds-eye view of the current Drupal installation, if any.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">item</td></td>Optional. The status item line(s) to display.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">show-passwords</td></td>Show database password.</td></tr><tr><td valign="baseline">full</td></td>Show all file paths and drush aliases in the report, even if there are a lot.</td></tr><tr><td valign="baseline">project</td></td>One or more projects that should be added to the path list</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: json, list, var_export, yaml. Default is key-value.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-status version</td></td>Show all status lines that contain version information.</td></tr><tr><td valign="baseline">drush core-status --pipe</td></td>A list key=value items separated by line breaks.</td></tr><tr><td valign="baseline">drush core-status drush-version --pipe</td></td>Emit just the drush version with no label.</td></tr><tr><td valign="baseline">drush core-status config-active --pipe</td></td>Emit just the active Config directory with no label.</td></tr></table><br/> </html>]]></help>
    <params>item[=null]</params>
  </command>
  <command>
    <name>status</name>
    <help><![CDATA[<html>Provides a birds-eye view of the current Drupal installation, if any.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">item</td></td>Optional. The status item line(s) to display.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">show-passwords</td></td>Show database password.</td></tr><tr><td valign="baseline">full</td></td>Show all file paths and drush aliases in the report, even if there are a lot.</td></tr><tr><td valign="baseline">project</td></td>One or more projects that should be added to the path list</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: json, list, var_export, yaml. Default is key-value.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-status version</td></td>Show all status lines that contain version information.</td></tr><tr><td valign="baseline">drush core-status --pipe</td></td>A list key=value items separated by line breaks.</td></tr><tr><td valign="baseline">drush core-status drush-version --pipe</td></td>Emit just the drush version with no label.</td></tr><tr><td valign="baseline">drush core-status config-active --pipe</td></td>Emit just the active Config directory with no label.</td></tr></table><br/> </html>]]></help>
    <params>item[=null]</params>
  </command>
  <command>
    <name>st</name>
    <help><![CDATA[<html>Provides a birds-eye view of the current Drupal installation, if any.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">item</td></td>Optional. The status item line(s) to display.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">show-passwords</td></td>Show database password.</td></tr><tr><td valign="baseline">full</td></td>Show all file paths and drush aliases in the report, even if there are a lot.</td></tr><tr><td valign="baseline">project</td></td>One or more projects that should be added to the path list</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: json, list, var_export, yaml. Default is key-value.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush core-status version</td></td>Show all status lines that contain version information.</td></tr><tr><td valign="baseline">drush core-status --pipe</td></td>A list key=value items separated by line breaks.</td></tr><tr><td valign="baseline">drush core-status drush-version --pipe</td></td>Emit just the drush version with no label.</td></tr><tr><td valign="baseline">drush core-status config-active --pipe</td></td>Emit just the active Config directory with no label.</td></tr></table><br/> </html>]]></help>
    <params>item[=null]</params>
  </command>
  <command>
    <name>core-topic</name>
    <help><![CDATA[<html>Read detailed documentation on a given topic.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">topic_name</td></td>The name of the topic you wish to view. If omitted, list all topic descriptions (and names in parenthesis).</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush topic</td></td>Show all available topics.</td></tr><tr><td valign="baseline">drush topic docs-context</td></td>Show documentation for the drush context API</td></tr><tr><td valign="baseline">drush docs-context</td></td>Show documentation for the drush context API</td></tr></table><br/> </html>]]></help>
    <params>topic_name[=null]</params>
  </command>
  <command>
    <name>topic</name>
    <help><![CDATA[<html>Read detailed documentation on a given topic.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">topic_name</td></td>The name of the topic you wish to view. If omitted, list all topic descriptions (and names in parenthesis).</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush topic</td></td>Show all available topics.</td></tr><tr><td valign="baseline">drush topic docs-context</td></td>Show documentation for the drush context API</td></tr><tr><td valign="baseline">drush docs-context</td></td>Show documentation for the drush context API</td></tr></table><br/> </html>]]></help>
    <params>topic_name[=null]</params>
  </command>
  <command>
    <name>drupal-directory</name>
    <help><![CDATA[<html>Return path to a given module/theme directory.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">target</td></td>A module/theme name, or special names like root, files, private, or an alias : path alias string such as @alias:%files. Defaults to root.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">component</td></td>The portion of the evaluated path to return. Defaults to 'path'; 'name' returns the site alias of the target.</td></tr><tr><td valign="baseline">local</td></td>Reject any target that specifies a remote site.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">cd `drush dd devel`</td></td>Navigate into the devel module directory</td></tr><tr><td valign="baseline">cd `drush dd` </td></td>Navigate to the root of your Drupal site</td></tr><tr><td valign="baseline">cd `drush dd files`</td></td>Navigate to the files directory.</td></tr><tr><td valign="baseline">drush dd @alias:%files</td></td>Print the path to the files directory on the site @alias.</td></tr><tr><td valign="baseline">edit `drush dd devel`/devel.module</td></td>Open devel module in your editor (customize 'edit' for your editor)</td></tr></table><br/> </html>]]></help>
    <params>target[=null]</params>
  </command>
  <command>
    <name>dd</name>
    <help><![CDATA[<html>Return path to a given module/theme directory.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">target</td></td>A module/theme name, or special names like root, files, private, or an alias : path alias string such as @alias:%files. Defaults to root.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">component</td></td>The portion of the evaluated path to return. Defaults to 'path'; 'name' returns the site alias of the target.</td></tr><tr><td valign="baseline">local</td></td>Reject any target that specifies a remote site.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">cd `drush dd devel`</td></td>Navigate into the devel module directory</td></tr><tr><td valign="baseline">cd `drush dd` </td></td>Navigate to the root of your Drupal site</td></tr><tr><td valign="baseline">cd `drush dd files`</td></td>Navigate to the files directory.</td></tr><tr><td valign="baseline">drush dd @alias:%files</td></td>Print the path to the files directory on the site @alias.</td></tr><tr><td valign="baseline">edit `drush dd devel`/devel.module</td></td>Open devel module in your editor (customize 'edit' for your editor)</td></tr></table><br/> </html>]]></help>
    <params>target[=null]</params>
  </command>
  <command>
    <name>help</name>
    <help><![CDATA[<html>Print this help message. See `drush help help` for more options.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">command</td></td>A command name, or command alias.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">sort</td></td>Sort commands in alphabetical order. Drush waits for full bootstrap before printing any commands when this option is used.</td></tr><tr><td valign="baseline">filter</td></td>Restrict command list to those commands defined in the specified file. Omit value to choose from a list of names.</td></tr><tr><td valign="baseline">format</td></td>Format to output . Allowed values are: json, var_export, html.</td></tr><tr><td valign="baseline">html</td></td>Print help for all commands in HTML format. Deprecated - see --format option.</td></tr><tr><td valign="baseline">pipe</td></td>A list of available commands, one per line.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush</td></td>List all commands.</td></tr><tr><td valign="baseline">drush --filter=devel_generate</td></td>Show only commands defined in devel_generate.drush.inc</td></tr><tr><td valign="baseline">drush help pm-download</td></td>Show help for one command.</td></tr><tr><td valign="baseline">drush help dl</td></td>Show help for one command using an alias.</td></tr></table><br/> </html>]]></help>
    <params>command[=null]</params>
  </command>
  <command>
    <name>image-flush</name>
    <help><![CDATA[<html>Flush all derived images for a given style.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">style</td></td>An image style machine name. If not provided, user may choose from a list of names.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">all</td></td>Flush all derived images</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush image-flush</td></td>Pick an image style and then delete its images.</td></tr><tr><td valign="baseline">drush image-flush thumbnail</td></td>Delete all thumbnail images.</td></tr><tr><td valign="baseline">drush image-flush --all</td></td>Flush all derived images. They will be regenerated on the fly.</td></tr></table><br/> </html>]]></help>
    <params>style[=null]</params>
  </command>
  <command>
    <name>php-eval</name>
    <help><![CDATA[<html>Evaluate arbitrary php code after bootstrapping Drupal (if available).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">code</td></td>PHP code</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: var_export, csv, json, list, string, table, yaml. Default is var_export.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=string</td></td>A simple string.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush php-eval "variable_set('hello', 'world');"</td></td>Sets the hello variable using Drupal API.</td></tr></table><br/> </html>]]></help>
    <params>code</params>
  </command>
  <command>
    <name>eval</name>
    <help><![CDATA[<html>Evaluate arbitrary php code after bootstrapping Drupal (if available).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">code</td></td>PHP code</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: var_export, csv, json, list, string, table, yaml. Default is var_export.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=string</td></td>A simple string.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush php-eval "variable_set('hello', 'world');"</td></td>Sets the hello variable using Drupal API.</td></tr></table><br/> </html>]]></help>
    <params>code</params>
  </command>
  <command>
    <name>ev</name>
    <help><![CDATA[<html>Evaluate arbitrary php code after bootstrapping Drupal (if available).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">code</td></td>PHP code</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: var_export, csv, json, list, string, table, yaml. Default is var_export.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=string</td></td>A simple string.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush php-eval "variable_set('hello', 'world');"</td></td>Sets the hello variable using Drupal API.</td></tr></table><br/> </html>]]></help>
    <params>code</params>
  </command>
  <command>
    <name>php-script</name>
    <help><![CDATA[<html>Run php script(s).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">filename</td></td>Optional. The file you wish to execute (without extension). If omitted, list files ending in .php in the current working directory and specified script-path. Some might not be real drush scripts. Beware.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">script-path</td></td>Additional paths to search for scripts, separated by : (Unix-based systems) or ; (Windows).</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush php-script scratch</td></td>Run scratch.php script. See commands/core directory.</td></tr><tr><td valign="baseline">drush php-script example --script-path=/path/to/scripts:/another/path</td></td>Run script from specified paths</td></tr><tr><td valign="baseline">drush php-script</td></td>List all available scripts.</td></tr><tr><td valign="baseline"></td></td></td></tr><tr><td valign="baseline">#!/usr/bin/env drush <?php variable_set('key', drush_shift());</td></td>Execute php code with a full Drupal bootstrap directly from a shell script.</td></tr></table><br/> </html>]]></help>
    <params>filename[=null]</params>
  </command>
  <command>
    <name>scr</name>
    <help><![CDATA[<html>Run php script(s).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">filename</td></td>Optional. The file you wish to execute (without extension). If omitted, list files ending in .php in the current working directory and specified script-path. Some might not be real drush scripts. Beware.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">script-path</td></td>Additional paths to search for scripts, separated by : (Unix-based systems) or ; (Windows).</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush php-script scratch</td></td>Run scratch.php script. See commands/core directory.</td></tr><tr><td valign="baseline">drush php-script example --script-path=/path/to/scripts:/another/path</td></td>Run script from specified paths</td></tr><tr><td valign="baseline">drush php-script</td></td>List all available scripts.</td></tr><tr><td valign="baseline"></td></td></td></tr><tr><td valign="baseline">#!/usr/bin/env drush <?php variable_set('key', drush_shift());</td></td>Execute php code with a full Drupal bootstrap directly from a shell script.</td></tr></table><br/> </html>]]></help>
    <params>filename[=null]</params>
  </command>
  <command>
    <name>queue-list</name>
    <help><![CDATA[<html>Returns a list of all defined queues<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>queue-run</name>
    <help><![CDATA[<html>Run a specific queue by name<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">queue_name</td></td>The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info.</td></tr></table><br/> No options<br/> </html>]]></help>
    <params>queue_name</params>
  </command>
  <command>
    <name>search-index</name>
    <help><![CDATA[<html>Index the remaining search items without wiping the index.<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>search-reindex</name>
    <help><![CDATA[<html>Force the search index to be rebuilt.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">immediate</td></td>Rebuild the index immediately, instead of waiting for cron.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>search-status</name>
    <help><![CDATA[<html>Show how many items remain to be indexed out of the total.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: json, list, var_export, yaml. Default is message.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>shell-alias</name>
    <help><![CDATA[<html>Print all known shell alias records.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">alias</td></td>Shell alias to print</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: json, list, var_export, yaml. Default is key-value.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush shell-alias</td></td>List all alias records known to drush.</td></tr><tr><td valign="baseline">drush shell-alias pull</td></td>Print the value of the shell alias 'pull'.</td></tr></table><br/> </html>]]></help>
    <params>alias[=null]</params>
  </command>
  <command>
    <name>sha</name>
    <help><![CDATA[<html>Print all known shell alias records.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">alias</td></td>Shell alias to print</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: json, list, var_export, yaml. Default is key-value.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush shell-alias</td></td>List all alias records known to drush.</td></tr><tr><td valign="baseline">drush shell-alias pull</td></td>Print the value of the shell alias 'pull'.</td></tr></table><br/> </html>]]></help>
    <params>alias[=null]</params>
  </command>
  <command>
    <name>site-alias</name>
    <help><![CDATA[<html>Print site alias records for all known site aliases and local sites.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">site</td></td>Site specification to print</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">with-db</td></td>Include the databases structure in the full alias record.</td></tr><tr><td valign="baseline">with-db-url</td></td>Include the short-form db-url in the full alias record.</td></tr><tr><td valign="baseline">no-db</td></td>Do not include the database record in the full alias record (default).</td></tr><tr><td valign="baseline">with-optional</td></td>Include optional default items.</td></tr><tr><td valign="baseline">alias-name</td></td>For a single alias, set the name to use in the output.</td></tr><tr><td valign="baseline">local</td></td>Only display sites that are available on the local system (remote-site not set, and Drupal root exists).</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: config, csv, json, list, table, var_export, yaml. Default is config.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush site-alias</td></td>List all alias records known to drush.</td></tr><tr><td valign="baseline">drush site-alias @dev</td></td>Print an alias record for the alias 'dev'.</td></tr></table><br/> </html>]]></help>
    <params>site[=null]</params>
  </command>
  <command>
    <name>sa</name>
    <help><![CDATA[<html>Print site alias records for all known site aliases and local sites.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">site</td></td>Site specification to print</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">with-db</td></td>Include the databases structure in the full alias record.</td></tr><tr><td valign="baseline">with-db-url</td></td>Include the short-form db-url in the full alias record.</td></tr><tr><td valign="baseline">no-db</td></td>Do not include the database record in the full alias record (default).</td></tr><tr><td valign="baseline">with-optional</td></td>Include optional default items.</td></tr><tr><td valign="baseline">alias-name</td></td>For a single alias, set the name to use in the output.</td></tr><tr><td valign="baseline">local</td></td>Only display sites that are available on the local system (remote-site not set, and Drupal root exists).</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: config, csv, json, list, table, var_export, yaml. Default is config.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush site-alias</td></td>List all alias records known to drush.</td></tr><tr><td valign="baseline">drush site-alias @dev</td></td>Print an alias record for the alias 'dev'.</td></tr></table><br/> </html>]]></help>
    <params>site[=null]</params>
  </command>
  <command>
    <name>site-install</name>
    <help><![CDATA[<html>Install Drupal along with modules/themes/configuration using the specified install profile.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">profile</td></td>the install profile you wish to run. defaults to 'default' in D6, 'standard' in D7+</td></tr><tr><td valign="baseline">key=value...</td></td>any additional settings you wish to pass to the profile. Fully supported on D7+, partially supported on D6 (single step configure forms only). The key is in the form [form name].[parameter name] on D7 or just [parameter name] on D6.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL. Only required for initial install - not re-install.</td></tr><tr><td valign="baseline">db-prefix</td></td>An optional table prefix to use for initial install. Can be a key-value array of tables/prefixes in a drushrc file (not the command line).</td></tr><tr><td valign="baseline">db-su</td></td>Account to use when creating a new database. Must have Grant permission (mysql only). Optional.</td></tr><tr><td valign="baseline">db-su-pw</td></td>Password for the "db-su" account. Optional.</td></tr><tr><td valign="baseline">account-name</td></td>uid1 name. Defaults to admin</td></tr><tr><td valign="baseline">account-pass</td></td>uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in drushrc.php.</td></tr><tr><td valign="baseline">account-mail</td></td>uid1 email. Defaults to admin@example.com</td></tr><tr><td valign="baseline">locale</td></td>A short language code. Sets the default site language. Language files must already be present. You may use download command to get them.</td></tr><tr><td valign="baseline">clean-url</td></td>Defaults to 1</td></tr><tr><td valign="baseline">site-name</td></td>Defaults to Site-Install</td></tr><tr><td valign="baseline">site-mail</td></td>From: for system mailings. Defaults to admin@example.com</td></tr><tr><td valign="baseline">sites-subdir</td></td>Name of directory under 'sites' which should be created. Only needed when the subdirectory does not already exist. Defaults to 'default'</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush site-install expert --locale=uk</td></td>(Re)install using the expert install profile. Set default language to Ukranian.</td></tr><tr><td valign="baseline">drush site-install --db-url=mysql://root:pass@localhost:port/dbname</td></td>Install using the specified DB params.</td></tr><tr><td valign="baseline">drush site-install --db-url=sqlite://sites/example.com/files/.ht.sqlite</td></td>Install using SQLite (D7+ only).</td></tr><tr><td valign="baseline">drush site-install --account-name=joe --account-pass=mom</td></td>Re-install with specified uid1 credentials.</td></tr><tr><td valign="baseline">drush site-install standard install_configure_form.site_default_country=FR my_profile_form.my_settings.key=value</td></td>Pass additional arguments to the profile (D7 example shown here - for D6, omit the form id).</td></tr><tr><td valign="baseline">drush site-install install_configure_form.update_status_module='array(FALSE,FALSE)'</td></td>Disable email notification during install and later. If your server has no smtp, this gets rid of an error during install.</td></tr></table><br/> </html>]]></help>
    <params>profile[=null] key=value...[=null]</params>
  </command>
  <command>
    <name>si</name>
    <help><![CDATA[<html>Install Drupal along with modules/themes/configuration using the specified install profile.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">profile</td></td>the install profile you wish to run. defaults to 'default' in D6, 'standard' in D7+</td></tr><tr><td valign="baseline">key=value...</td></td>any additional settings you wish to pass to the profile. Fully supported on D7+, partially supported on D6 (single step configure forms only). The key is in the form [form name].[parameter name] on D7 or just [parameter name] on D6.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL. Only required for initial install - not re-install.</td></tr><tr><td valign="baseline">db-prefix</td></td>An optional table prefix to use for initial install. Can be a key-value array of tables/prefixes in a drushrc file (not the command line).</td></tr><tr><td valign="baseline">db-su</td></td>Account to use when creating a new database. Must have Grant permission (mysql only). Optional.</td></tr><tr><td valign="baseline">db-su-pw</td></td>Password for the "db-su" account. Optional.</td></tr><tr><td valign="baseline">account-name</td></td>uid1 name. Defaults to admin</td></tr><tr><td valign="baseline">account-pass</td></td>uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in drushrc.php.</td></tr><tr><td valign="baseline">account-mail</td></td>uid1 email. Defaults to admin@example.com</td></tr><tr><td valign="baseline">locale</td></td>A short language code. Sets the default site language. Language files must already be present. You may use download command to get them.</td></tr><tr><td valign="baseline">clean-url</td></td>Defaults to 1</td></tr><tr><td valign="baseline">site-name</td></td>Defaults to Site-Install</td></tr><tr><td valign="baseline">site-mail</td></td>From: for system mailings. Defaults to admin@example.com</td></tr><tr><td valign="baseline">sites-subdir</td></td>Name of directory under 'sites' which should be created. Only needed when the subdirectory does not already exist. Defaults to 'default'</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush site-install expert --locale=uk</td></td>(Re)install using the expert install profile. Set default language to Ukranian.</td></tr><tr><td valign="baseline">drush site-install --db-url=mysql://root:pass@localhost:port/dbname</td></td>Install using the specified DB params.</td></tr><tr><td valign="baseline">drush site-install --db-url=sqlite://sites/example.com/files/.ht.sqlite</td></td>Install using SQLite (D7+ only).</td></tr><tr><td valign="baseline">drush site-install --account-name=joe --account-pass=mom</td></td>Re-install with specified uid1 credentials.</td></tr><tr><td valign="baseline">drush site-install standard install_configure_form.site_default_country=FR my_profile_form.my_settings.key=value</td></td>Pass additional arguments to the profile (D7 example shown here - for D6, omit the form id).</td></tr><tr><td valign="baseline">drush site-install install_configure_form.update_status_module='array(FALSE,FALSE)'</td></td>Disable email notification during install and later. If your server has no smtp, this gets rid of an error during install.</td></tr></table><br/> </html>]]></help>
    <params>profile[=null] key=value...[=null]</params>
  </command>
  <command>
    <name>site-set</name>
    <help><![CDATA[<html>Set a site alias to work on that will persist for the current session.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">site</td></td>Site specification to use, or "-" for previous site. Omit this argument to "unset"</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush site-set @dev</td></td>Set the current session to use the @dev alias.</td></tr><tr><td valign="baseline">drush site-set user@server/path/to/drupal#sitename</td></td>Set the current session to use a site specification.</td></tr><tr><td valign="baseline">drush site-set -</td></td>Go back to the previously-set site (like `cd -`).</td></tr><tr><td valign="baseline">drush site-set</td></td>Without an argument, any existing site becomes unset.</td></tr></table><br/> </html>]]></help>
    <params>site[=null]</params>
  </command>
  <command>
    <name>use</name>
    <help><![CDATA[<html>Set a site alias to work on that will persist for the current session.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">site</td></td>Site specification to use, or "-" for previous site. Omit this argument to "unset"</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush site-set @dev</td></td>Set the current session to use the @dev alias.</td></tr><tr><td valign="baseline">drush site-set user@server/path/to/drupal#sitename</td></td>Set the current session to use a site specification.</td></tr><tr><td valign="baseline">drush site-set -</td></td>Go back to the previously-set site (like `cd -`).</td></tr><tr><td valign="baseline">drush site-set</td></td>Without an argument, any existing site becomes unset.</td></tr></table><br/> </html>]]></help>
    <params>site[=null]</params>
  </command>
  <command>
    <name>site-ssh</name>
    <help><![CDATA[<html>Connect to a Drupal site's server via SSH for an interactive session or to run a shell command<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">site-alias</td></td>A remote site alias. Can be an alias list.</td></tr><tr><td valign="baseline">bash</td></td>Bash to execute on target. Optional, except when site-alias is a list.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">cd</td></td>Directory to change to. Use a full path, TRUE for the site's Drupal root directory, or FALSE for the remote user's home directory. Defaults to the Drupal root.</td></tr><tr><td valign="baseline">ssh-options</td></td>A string of extra options that will be passed to the ssh command (e.g. "-p 100")</td></tr><tr><td valign="baseline">tty</td></td>Create a tty (e.g. to run an interactive program).</td></tr><tr><td valign="baseline">escaped</td></td>Command string already escaped; do not add additional quoting.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush @mysite ssh</td></td>Open an interactive shell on @mysite's server.</td></tr><tr><td valign="baseline">drush @prod ssh 'ls /tmp'</td></td>Run "ls /tmp" on @prod site. If @prod is a site list, then ls will be executed on each site.</td></tr><tr><td valign="baseline">drush @prod git pull</td></td>Run "git pull" on the Drupal root directory on the @prod site.</td></tr></table><br/> </html>]]></help>
    <params>site-alias[=null] bash[=null]</params>
  </command>
  <command>
    <name>ssh</name>
    <help><![CDATA[<html>Connect to a Drupal site's server via SSH for an interactive session or to run a shell command<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">site-alias</td></td>A remote site alias. Can be an alias list.</td></tr><tr><td valign="baseline">bash</td></td>Bash to execute on target. Optional, except when site-alias is a list.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">cd</td></td>Directory to change to. Use a full path, TRUE for the site's Drupal root directory, or FALSE for the remote user's home directory. Defaults to the Drupal root.</td></tr><tr><td valign="baseline">ssh-options</td></td>A string of extra options that will be passed to the ssh command (e.g. "-p 100")</td></tr><tr><td valign="baseline">tty</td></td>Create a tty (e.g. to run an interactive program).</td></tr><tr><td valign="baseline">escaped</td></td>Command string already escaped; do not add additional quoting.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush @mysite ssh</td></td>Open an interactive shell on @mysite's server.</td></tr><tr><td valign="baseline">drush @prod ssh 'ls /tmp'</td></td>Run "ls /tmp" on @prod site. If @prod is a site list, then ls will be executed on each site.</td></tr><tr><td valign="baseline">drush @prod git pull</td></td>Run "git pull" on the Drupal root directory on the @prod site.</td></tr></table><br/> </html>]]></help>
    <params>site-alias[=null] bash[=null]</params>
  </command>
  <command>
    <name>test-clean</name>
    <help><![CDATA[<html>Clean temporary tables and files.<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>test-run</name>
    <help><![CDATA[<html>Run tests. Note that you must use the --uri option.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">targets</td></td>A test class, a test group. If omitted, a list of test classes and test groups is presented. Delimit multiple targets using commas.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">all</td></td>Run all available tests</td></tr><tr><td valign="baseline">methods</td></td>A comma delimited list of methods that should be run within the test class. Defaults to all methods.</td></tr><tr><td valign="baseline">dirty</td></td>Skip cleanup of temporary tables and files. Helpful for reading debug() messages and other post-mortem forensics.</td></tr><tr><td valign="baseline">xml</td></td>Output verbose test results to a specified directory using the JUnit test reporting format. Useful for integrating with Jenkins.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">test-run</td></td>List all available classes and groups.</td></tr><tr><td valign="baseline">sudo -u apache test-run --all</td></td>Run all available tests. Avoid permission related failures by running as web server user.</td></tr><tr><td valign="baseline">test-run XMLRPCBasicTestCase</td></td>Run one test class.</td></tr><tr><td valign="baseline">test-run XML-RPC</td></td>Run all classes in a XML-RPC group.</td></tr><tr><td valign="baseline">test-run XML-RPC,Filter</td></td>Run all tests from multiple groups/classes.</td></tr><tr><td valign="baseline">test-run XMLRPCBasicTestCase --methods="testListMethods, testInvalidMessageParsing"</td></td>Run particular methods in the specified class or group.</td></tr></table><br/> </html>]]></help>
    <params>targets[=null]</params>
  </command>
  <command>
    <name>updatedb</name>
    <help><![CDATA[<html>Apply any database updates required (as with running update.php).<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>updb</name>
    <help><![CDATA[<html>Apply any database updates required (as with running update.php).<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>updatedb-status</name>
    <help><![CDATA[<html>List any pending database updates.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>updbst</name>
    <help><![CDATA[<html>List any pending database updates.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>usage-send</name>
    <help><![CDATA[<html>Send anonymous Drush usage information to statistics logging site. Usage statistics contain the Drush command name and the Drush option names, but no arguments or option values.<br/>No arguments<br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush usage-send</td></td>Immediately send cached usage statistics.</td></tr><tr><td valign="baseline">$options['drush_usage_send'] = TRUE;</td></td>Specify in a .drushrc.php file that usage information should be sent.</td></tr><tr><td valign="baseline">$options['drush_usage_size'] = 10240;</td></td>Specify the frequency (file size) that usage information should be sent.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>usend</name>
    <help><![CDATA[<html>Send anonymous Drush usage information to statistics logging site. Usage statistics contain the Drush command name and the Drush option names, but no arguments or option values.<br/>No arguments<br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush usage-send</td></td>Immediately send cached usage statistics.</td></tr><tr><td valign="baseline">$options['drush_usage_send'] = TRUE;</td></td>Specify in a .drushrc.php file that usage information should be sent.</td></tr><tr><td valign="baseline">$options['drush_usage_size'] = 10240;</td></td>Specify the frequency (file size) that usage information should be sent.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>usage-show</name>
    <help><![CDATA[<html>Show Drush usage information that has been logged but not sent. Usage statistics contain the Drush command name and the Drush option names, but no arguments or option values.<br/>No arguments<br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush usage-show</td></td>Show cached usage statistics.</td></tr><tr><td valign="baseline">$options['drush_usage_log'] = TRUE;</td></td>Specify in a .drushrc.php file that usage information should be logged locally in a usage statistics file.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>ushow</name>
    <help><![CDATA[<html>Show Drush usage information that has been logged but not sent. Usage statistics contain the Drush command name and the Drush option names, but no arguments or option values.<br/>No arguments<br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush usage-show</td></td>Show cached usage statistics.</td></tr><tr><td valign="baseline">$options['drush_usage_log'] = TRUE;</td></td>Specify in a .drushrc.php file that usage information should be logged locally in a usage statistics file.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>variable-delete</name>
    <help><![CDATA[<html>Delete a variable.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of a variable or the first few letters of its name.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">yes</td></td>Skip confirmation if only one variable name matches.</td></tr><tr><td valign="baseline">exact</td></td>Only delete the one variable that exactly matches the specified name.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush vdel user_pictures</td></td>Delete the user_pictures variable.</td></tr><tr><td valign="baseline">drush vdel u</td></td>Choose from a list of variables beginning with "u" to delete.</td></tr><tr><td valign="baseline">drush vdel -y --exact maintenance_mode</td></td>Bring the site back online, skipping confirmation. Variable is rewritten to site_offline for Drupal 6.</td></tr></table><br/> </html>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>vdel</name>
    <help><![CDATA[<html>Delete a variable.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of a variable or the first few letters of its name.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">yes</td></td>Skip confirmation if only one variable name matches.</td></tr><tr><td valign="baseline">exact</td></td>Only delete the one variable that exactly matches the specified name.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush vdel user_pictures</td></td>Delete the user_pictures variable.</td></tr><tr><td valign="baseline">drush vdel u</td></td>Choose from a list of variables beginning with "u" to delete.</td></tr><tr><td valign="baseline">drush vdel -y --exact maintenance_mode</td></td>Bring the site back online, skipping confirmation. Variable is rewritten to site_offline for Drupal 6.</td></tr></table><br/> </html>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>variable-get</name>
    <help><![CDATA[<html>Get a list of some or all site variables and values.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>A string to filter the variables by. Variables whose name contains the string will be listed.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">exact</td></td>Only get the one variable that exactly matches the specified name.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: labeled-export, csv, json, list, string, table, var_export, yaml. Default is labeled-export.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=string</td></td>A simple string.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush vget</td></td>List all variables and values.</td></tr><tr><td valign="baseline">drush vget user</td></td>List all variables containing the string "user".</td></tr><tr><td valign="baseline">drush vget site_mail --exact</td></td>Show the variable with the exact key "site_mail".</td></tr></table><br/> </html>]]></help>
    <params>name[=null]</params>
  </command>
  <command>
    <name>vget</name>
    <help><![CDATA[<html>Get a list of some or all site variables and values.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>A string to filter the variables by. Variables whose name contains the string will be listed.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">exact</td></td>Only get the one variable that exactly matches the specified name.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: labeled-export, csv, json, list, string, table, var_export, yaml. Default is labeled-export.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=string</td></td>A simple string.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush vget</td></td>List all variables and values.</td></tr><tr><td valign="baseline">drush vget user</td></td>List all variables containing the string "user".</td></tr><tr><td valign="baseline">drush vget site_mail --exact</td></td>Show the variable with the exact key "site_mail".</td></tr></table><br/> </html>]]></help>
    <params>name[=null]</params>
  </command>
  <command>
    <name>variable-set</name>
    <help><![CDATA[<html>Set a variable.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of a variable or the first few letters of its name.</td></tr><tr><td valign="baseline">value</td></td>The value to assign to the variable. Use '-' to read the object from STDIN.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">yes</td></td>Skip confirmation if only one variable name matches.</td></tr><tr><td valign="baseline">always-set</td></td>Older synonym for --exact; deprecated.</td></tr><tr><td valign="baseline">exact</td></td>The exact name of the variable to set has been provided; do not prompt for similarly-named variables.</td></tr><tr><td valign="baseline">format</td></td>Format to parse the object. Use "auto" to detect format from value (default), "string", "integer" or "boolean" for corresponding primitive type, and "json" for JSON.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush vset --yes preprocess_css TRUE</td></td>Set the preprocess_css variable to true. Skip confirmation if variable already exists.</td></tr><tr><td valign="baseline">drush vset --exact maintenance_mode 1</td></td>Take the site offline; skips confirmation even if maintenance_mode variable does not exist. Variable is rewritten to site_offline for Drupal 6.</td></tr><tr><td valign="baseline">drush vset pr TRUE</td></td>Choose from a list of variables beginning with "pr" to set to (bool)true.</td></tr><tr><td valign="baseline">php -r "print json_encode(array('drupal', 'simpletest'));" | drush vset --format=json project_dependency_excluded_dependencies -</td></td>Set a variable to a complex value (e.g. array)</td></tr></table><br/> </html>]]></help>
    <params>name value</params>
  </command>
  <command>
    <name>vset</name>
    <help><![CDATA[<html>Set a variable.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of a variable or the first few letters of its name.</td></tr><tr><td valign="baseline">value</td></td>The value to assign to the variable. Use '-' to read the object from STDIN.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">yes</td></td>Skip confirmation if only one variable name matches.</td></tr><tr><td valign="baseline">always-set</td></td>Older synonym for --exact; deprecated.</td></tr><tr><td valign="baseline">exact</td></td>The exact name of the variable to set has been provided; do not prompt for similarly-named variables.</td></tr><tr><td valign="baseline">format</td></td>Format to parse the object. Use "auto" to detect format from value (default), "string", "integer" or "boolean" for corresponding primitive type, and "json" for JSON.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush vset --yes preprocess_css TRUE</td></td>Set the preprocess_css variable to true. Skip confirmation if variable already exists.</td></tr><tr><td valign="baseline">drush vset --exact maintenance_mode 1</td></td>Take the site offline; skips confirmation even if maintenance_mode variable does not exist. Variable is rewritten to site_offline for Drupal 6.</td></tr><tr><td valign="baseline">drush vset pr TRUE</td></td>Choose from a list of variables beginning with "pr" to set to (bool)true.</td></tr><tr><td valign="baseline">php -r "print json_encode(array('drupal', 'simpletest'));" | drush vset --format=json project_dependency_excluded_dependencies -</td></td>Set a variable to a complex value (e.g. array)</td></tr></table><br/> </html>]]></help>
    <params>name value</params>
  </command>
  <command>
    <name>version</name>
    <help><![CDATA[<html>Show drush version.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">pipe</td></td>Print just the version number, and nothing else.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: json, string, var_export, yaml. Default is key-value.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=string</td></td>A simple string.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>watchdog-delete</name>
    <help><![CDATA[<html>Delete watchdog messages.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">severity</td></td>Delete messages of a given severity level.</td></tr><tr><td valign="baseline">type</td></td>Delete messages of a given type.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush watchdog-delete all</td></td>Delete all messages.</td></tr><tr><td valign="baseline">drush watchdog-delete 64</td></td>Delete messages with id 64.</td></tr><tr><td valign="baseline">drush watchdog-delete "cron run succesful"</td></td>Delete messages containing the string "cron run succesful".</td></tr><tr><td valign="baseline">drush watchdog-delete --severity=notice</td></td>Delete all messages with a severity of notice.</td></tr><tr><td valign="baseline">drush watchdog-delete --type=cron</td></td>Delete all messages of type cron.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>wd-del</name>
    <help><![CDATA[<html>Delete watchdog messages.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">severity</td></td>Delete messages of a given severity level.</td></tr><tr><td valign="baseline">type</td></td>Delete messages of a given type.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush watchdog-delete all</td></td>Delete all messages.</td></tr><tr><td valign="baseline">drush watchdog-delete 64</td></td>Delete messages with id 64.</td></tr><tr><td valign="baseline">drush watchdog-delete "cron run succesful"</td></td>Delete messages containing the string "cron run succesful".</td></tr><tr><td valign="baseline">drush watchdog-delete --severity=notice</td></td>Delete all messages with a severity of notice.</td></tr><tr><td valign="baseline">drush watchdog-delete --type=cron</td></td>Delete all messages of type cron.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>wd-delete</name>
    <help><![CDATA[<html>Delete watchdog messages.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">severity</td></td>Delete messages of a given severity level.</td></tr><tr><td valign="baseline">type</td></td>Delete messages of a given type.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush watchdog-delete all</td></td>Delete all messages.</td></tr><tr><td valign="baseline">drush watchdog-delete 64</td></td>Delete messages with id 64.</td></tr><tr><td valign="baseline">drush watchdog-delete "cron run succesful"</td></td>Delete messages containing the string "cron run succesful".</td></tr><tr><td valign="baseline">drush watchdog-delete --severity=notice</td></td>Delete all messages with a severity of notice.</td></tr><tr><td valign="baseline">drush watchdog-delete --type=cron</td></td>Delete all messages of type cron.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>watchdog-list</name>
    <help><![CDATA[<html>Show available message types and severity levels. A prompt will ask for a choice to show watchdog messages.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>wd-list</name>
    <help><![CDATA[<html>Show available message types and severity levels. A prompt will ask for a choice to show watchdog messages.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>watchdog-show</name>
    <help><![CDATA[<html>Show watchdog messages.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">wid</td></td>Optional id of a watchdog message to show in detail. If not provided, a listing of most recent 10 messages will be displayed. Alternatively if a string is provided, watchdog messages will be filtered by it.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">count</td></td>The number of messages to show. Defaults to 10.</td></tr><tr><td valign="baseline">severity</td></td>Restrict to messages of a given severity level.</td></tr><tr><td valign="baseline">type</td></td>Restrict to messages of a given type.</td></tr><tr><td valign="baseline">tail</td></td>Continuously show new watchdog messages until interrupted.</td></tr><tr><td valign="baseline">sleep-delay</td></td>To be used in conjunction with --tail. This is the number of seconds to wait between each poll to the database. Delay is 1 second by default.</td></tr><tr><td valign="baseline">extended</td></td>Return extended information about each message.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush watchdog-show</td></td>Show a listing of most recent 10 messages.</td></tr><tr><td valign="baseline">drush watchdog-show 64</td></td>Show in detail message with id 64.</td></tr><tr><td valign="baseline">drush watchdog-show "cron run succesful"</td></td>Show a listing of most recent 10 messages containing the string "cron run succesful".</td></tr><tr><td valign="baseline">drush watchdog-show --count=46</td></td>Show a listing of most recent 46 messages.</td></tr><tr><td valign="baseline">drush watchdog-show --severity=notice</td></td>Show a listing of most recent 10 messages with a severity of notice.</td></tr><tr><td valign="baseline">drush watchdog-show --type=php</td></td>Show a listing of most recent 10 messages of type php.</td></tr><tr><td valign="baseline">drush watchdog-show --tail --extended</td></td>Show a listing of most recent 10 messages with extended information about each one and continue showing messages as they are registered in the watchdog.</td></tr><tr><td valign="baseline">drush watchdog-show --tail --sleep-delay=2</td></td>Do a tail of the watchdog with a delay of two seconds between each poll to the database.</td></tr></table><br/> </html>]]></help>
    <params>wid[=null]</params>
  </command>
  <command>
    <name>wd-show</name>
    <help><![CDATA[<html>Show watchdog messages.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">wid</td></td>Optional id of a watchdog message to show in detail. If not provided, a listing of most recent 10 messages will be displayed. Alternatively if a string is provided, watchdog messages will be filtered by it.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">count</td></td>The number of messages to show. Defaults to 10.</td></tr><tr><td valign="baseline">severity</td></td>Restrict to messages of a given severity level.</td></tr><tr><td valign="baseline">type</td></td>Restrict to messages of a given type.</td></tr><tr><td valign="baseline">tail</td></td>Continuously show new watchdog messages until interrupted.</td></tr><tr><td valign="baseline">sleep-delay</td></td>To be used in conjunction with --tail. This is the number of seconds to wait between each poll to the database. Delay is 1 second by default.</td></tr><tr><td valign="baseline">extended</td></td>Return extended information about each message.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush watchdog-show</td></td>Show a listing of most recent 10 messages.</td></tr><tr><td valign="baseline">drush watchdog-show 64</td></td>Show in detail message with id 64.</td></tr><tr><td valign="baseline">drush watchdog-show "cron run succesful"</td></td>Show a listing of most recent 10 messages containing the string "cron run succesful".</td></tr><tr><td valign="baseline">drush watchdog-show --count=46</td></td>Show a listing of most recent 46 messages.</td></tr><tr><td valign="baseline">drush watchdog-show --severity=notice</td></td>Show a listing of most recent 10 messages with a severity of notice.</td></tr><tr><td valign="baseline">drush watchdog-show --type=php</td></td>Show a listing of most recent 10 messages of type php.</td></tr><tr><td valign="baseline">drush watchdog-show --tail --extended</td></td>Show a listing of most recent 10 messages with extended information about each one and continue showing messages as they are registered in the watchdog.</td></tr><tr><td valign="baseline">drush watchdog-show --tail --sleep-delay=2</td></td>Do a tail of the watchdog with a delay of two seconds between each poll to the database.</td></tr></table><br/> </html>]]></help>
    <params>wid[=null]</params>
  </command>
  <command>
    <name>ws</name>
    <help><![CDATA[<html>Show watchdog messages.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">wid</td></td>Optional id of a watchdog message to show in detail. If not provided, a listing of most recent 10 messages will be displayed. Alternatively if a string is provided, watchdog messages will be filtered by it.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">count</td></td>The number of messages to show. Defaults to 10.</td></tr><tr><td valign="baseline">severity</td></td>Restrict to messages of a given severity level.</td></tr><tr><td valign="baseline">type</td></td>Restrict to messages of a given type.</td></tr><tr><td valign="baseline">tail</td></td>Continuously show new watchdog messages until interrupted.</td></tr><tr><td valign="baseline">sleep-delay</td></td>To be used in conjunction with --tail. This is the number of seconds to wait between each poll to the database. Delay is 1 second by default.</td></tr><tr><td valign="baseline">extended</td></td>Return extended information about each message.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush watchdog-show</td></td>Show a listing of most recent 10 messages.</td></tr><tr><td valign="baseline">drush watchdog-show 64</td></td>Show in detail message with id 64.</td></tr><tr><td valign="baseline">drush watchdog-show "cron run succesful"</td></td>Show a listing of most recent 10 messages containing the string "cron run succesful".</td></tr><tr><td valign="baseline">drush watchdog-show --count=46</td></td>Show a listing of most recent 46 messages.</td></tr><tr><td valign="baseline">drush watchdog-show --severity=notice</td></td>Show a listing of most recent 10 messages with a severity of notice.</td></tr><tr><td valign="baseline">drush watchdog-show --type=php</td></td>Show a listing of most recent 10 messages of type php.</td></tr><tr><td valign="baseline">drush watchdog-show --tail --extended</td></td>Show a listing of most recent 10 messages with extended information about each one and continue showing messages as they are registered in the watchdog.</td></tr><tr><td valign="baseline">drush watchdog-show --tail --sleep-delay=2</td></td>Do a tail of the watchdog with a delay of two seconds between each poll to the database.</td></tr></table><br/> </html>]]></help>
    <params>wid[=null]</params>
  </command>
  <command>
    <name>runserver</name>
    <help><![CDATA[<html>Runs a lightweight built in http server for development.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">addr:port/path</td></td>Host IP address and port number to bind to and path to open in web browser. Format is addr:port/path, default 127.0.0.1:8888, all elements optional. See examples for shorthand.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">server</td></td>Which http server to use - either: "cgi" for a CGI based httpserver (default, requires php 5.3 and php-cgi binary) or "builtin" for php 5.4 built in http server.</td></tr><tr><td valign="baseline">php-cgi</td></td>Name of the php-cgi binary. If it is not on your current $PATH you should include the full path. You can include command line parameters to pass into php-cgi.</td></tr><tr><td valign="baseline">variables</td></td>Key-value array of variables to override in the $conf array for the running site. By default disables drupal_http_request_fails to avoid errors on Windows (which supports only one connection at a time). Comma delimited list of name=value pairs (or array in drushrc).</td></tr><tr><td valign="baseline">default-server</td></td>A default addr:port/path to use for any values not specified as an argument.</td></tr><tr><td valign="baseline">user</td></td>If opening a web browser, automatically log in as this user (user ID or username).</td></tr><tr><td valign="baseline">browser</td></td>If opening a web browser, which browser to user (defaults to operating system default).</td></tr><tr><td valign="baseline">dns</td></td>Resolve hostnames/IPs using DNS/rDNS (if possible) to determine binding IPs and/or human friendly hostnames for URLs and browser.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush rs 8080</td></td>Start runserver on 127.0.0.1, port 8080.</td></tr><tr><td valign="baseline">drush rs 10.0.0.28:80</td></td>Start runserver on 10.0.0.28, port 80.</td></tr><tr><td valign="baseline">drush rs [::1]:80</td></td>Start runserver on IPv6 localhost ::1, port 80.</td></tr><tr><td valign="baseline">drush rs --php-cgi=php5-cgi --dns localhost:8888/user</td></td>Start runserver on localhost (using rDNS to determine binding IP), port 8888, and open /user in browser. Use "php5-cgi" as the php-cgi binary.</td></tr><tr><td valign="baseline">drush rs /</td></td>Start runserver on default IP/port (127.0.0.1, port 8888), and open / in browser.</td></tr><tr><td valign="baseline">drush rs --default-server=127.0.0.1:8080/ -</td></td>Use a default (would be specified in your drushrc) that starts runserver on port 8080, and opens a browser to the front page. Set path to a single hyphen path in argument to prevent opening browser for this session.</td></tr><tr><td valign="baseline">drush rs --server=builtin :9000/admin</td></td>Start builtin php 5.4 runserver on 127.0.0.1, port 9000, and open /admin in browser. Note that you need a colon when you specify port and path, but no IP.</td></tr></table><br/> </html>]]></help>
    <params>addr:port/path[=null]</params>
  </command>
  <command>
    <name>rs</name>
    <help><![CDATA[<html>Runs a lightweight built in http server for development.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">addr:port/path</td></td>Host IP address and port number to bind to and path to open in web browser. Format is addr:port/path, default 127.0.0.1:8888, all elements optional. See examples for shorthand.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">server</td></td>Which http server to use - either: "cgi" for a CGI based httpserver (default, requires php 5.3 and php-cgi binary) or "builtin" for php 5.4 built in http server.</td></tr><tr><td valign="baseline">php-cgi</td></td>Name of the php-cgi binary. If it is not on your current $PATH you should include the full path. You can include command line parameters to pass into php-cgi.</td></tr><tr><td valign="baseline">variables</td></td>Key-value array of variables to override in the $conf array for the running site. By default disables drupal_http_request_fails to avoid errors on Windows (which supports only one connection at a time). Comma delimited list of name=value pairs (or array in drushrc).</td></tr><tr><td valign="baseline">default-server</td></td>A default addr:port/path to use for any values not specified as an argument.</td></tr><tr><td valign="baseline">user</td></td>If opening a web browser, automatically log in as this user (user ID or username).</td></tr><tr><td valign="baseline">browser</td></td>If opening a web browser, which browser to user (defaults to operating system default).</td></tr><tr><td valign="baseline">dns</td></td>Resolve hostnames/IPs using DNS/rDNS (if possible) to determine binding IPs and/or human friendly hostnames for URLs and browser.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush rs 8080</td></td>Start runserver on 127.0.0.1, port 8080.</td></tr><tr><td valign="baseline">drush rs 10.0.0.28:80</td></td>Start runserver on 10.0.0.28, port 80.</td></tr><tr><td valign="baseline">drush rs [::1]:80</td></td>Start runserver on IPv6 localhost ::1, port 80.</td></tr><tr><td valign="baseline">drush rs --php-cgi=php5-cgi --dns localhost:8888/user</td></td>Start runserver on localhost (using rDNS to determine binding IP), port 8888, and open /user in browser. Use "php5-cgi" as the php-cgi binary.</td></tr><tr><td valign="baseline">drush rs /</td></td>Start runserver on default IP/port (127.0.0.1, port 8888), and open / in browser.</td></tr><tr><td valign="baseline">drush rs --default-server=127.0.0.1:8080/ -</td></td>Use a default (would be specified in your drushrc) that starts runserver on port 8080, and opens a browser to the front page. Set path to a single hyphen path in argument to prevent opening browser for this session.</td></tr><tr><td valign="baseline">drush rs --server=builtin :9000/admin</td></td>Start builtin php 5.4 runserver on 127.0.0.1, port 9000, and open /admin in browser. Note that you need a colon when you specify port and path, but no IP.</td></tr></table><br/> </html>]]></help>
    <params>addr:port/path[=null]</params>
  </command>
  <command>
    <name>field-clone</name>
    <help><![CDATA[<html>Clone a field and all its instances.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">source_field_name</td></td>Name of field that will be cloned</td></tr><tr><td valign="baseline">target_field_name</td></td>Name of new, cloned field.</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">field-clone tags labels</td></td>Copy 'tags' field into a new field 'labels' field which has same instances.</td></tr><tr><td valign="baseline">open `field-clone tags labels`</td></td>Clone field and then open field edit forms for refinement.</td></tr></table><br/> </html>]]></help>
    <params>source_field_name[=null] target_field_name[=null]</params>
  </command>
  <command>
    <name>field-create</name>
    <help><![CDATA[<html>Create fields and instances. Returns urls for field editing.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">bundle</td></td>Content type (for nodes). Name of bundle to attach fields to. Required.</td></tr><tr><td valign="baseline">field_spec</td></td>Comma delimited triple in the form: field_name,field_type,widget_name. If widget_name is omitted, the default widget will be used. Separate multiple fields by space. If omitted, a wizard will prompt you.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">entity_type</td></td>Type of entity (e.g. node, user, comment). Defaults to node.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush field-create article</td></td>Define new article fields via interactive prompts.</td></tr><tr><td valign="baseline">open `drush field-create article`</td></td>Define new article fields and then open field edit form for refinement.</td></tr><tr><td valign="baseline">drush field-create article city,text,text_textfield subtitle,text,text_textfield</td></td>Create two new fields.</td></tr></table><br/> </html>]]></help>
    <params>bundle field_spec[=null]</params>
  </command>
  <command>
    <name>field-delete</name>
    <help><![CDATA[<html>Delete a field and its instances.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">field_name</td></td>Name of field to delete.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">bundle</td></td>Only delete the instance attached to this bundle. If omitted, admin can choose to delete one instance or whole field.</td></tr><tr><td valign="baseline">entity_type</td></td>Disambiguate a particular bundle from identically named bundles. Usually not needed.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">field-delete city</td></td>Delete the city field and any instances it might have.</td></tr><tr><td valign="baseline">field-delete city --bundle=article</td></td>Delete the city instance on the article bundle</td></tr></table><br/> </html>]]></help>
    <params>field_name[=null]</params>
  </command>
  <command>
    <name>field-info</name>
    <help><![CDATA[<html>View information about fields, field_types, and widgets.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">type</td></td>Recognized values: fields, types. If omitted, a choice list appears.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">field-info types</td></td>Show a table which lists all field types and their available widgets</td></tr></table><br/> </html>]]></help>
    <params>type[=null]</params>
  </command>
  <command>
    <name>field-update</name>
    <help><![CDATA[<html>Return URL for field editing web page.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">field_name</td></td>Name of field that needs updating.</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">field-update comment_body</td></td>Quickly navigate to a field edit web page.</td></tr></table><br/> </html>]]></help>
    <params>field_name[=null]</params>
  </command>
  <command>
    <name>pm-disable</name>
    <help><![CDATA[<html>Disable one or more extensions (modules or themes).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">extensions</td></td>A list of modules or themes. You can use the * wildcard at the end of extension names to disable multiple matches.</td></tr></table><br/> No options<br/> </html>]]></help>
    <params>extensions[=null]</params>
  </command>
  <command>
    <name>dis</name>
    <help><![CDATA[<html>Disable one or more extensions (modules or themes).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">extensions</td></td>A list of modules or themes. You can use the * wildcard at the end of extension names to disable multiple matches.</td></tr></table><br/> No options<br/> </html>]]></help>
    <params>extensions[=null]</params>
  </command>
  <command>
    <name>pm-download</name>
    <help><![CDATA[<html>Download projects from drupal.org or other sources.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>A comma delimited list of drupal.org project names, with optional version. Defaults to 'drupal'</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">destination</td></td>Path to which the project will be copied. If you're providing a relative path, note it is relative to the drupal root (if bootstrapped).</td></tr><tr><td valign="baseline">use-site-dir</td></td>Force to use the site specific directory. It will create the directory if it doesn't exist. If --destination is also present this option will be ignored.</td></tr><tr><td valign="baseline">notes</td></td>Show release notes after each project is downloaded.</td></tr><tr><td valign="baseline">variant</td></td>Only useful for install profiles. Possible values: 'full', 'projects', 'profile-only'.</td></tr><tr><td valign="baseline">select</td></td>Select the version to download interactively from a list of available releases.</td></tr><tr><td valign="baseline">drupal-project-rename</td></td>Alternate name for "drupal-x.y" directory when downloading Drupal project. Defaults to "drupal".</td></tr><tr><td valign="baseline">default-major</td></td>Specify the default major version of modules to download when there is no bootstrapped Drupal site. Defaults to "7".</td></tr><tr><td valign="baseline">skip</td></td>Skip automatic downloading of libraries (c.f. devel).</td></tr><tr><td valign="baseline">pipe</td></td>Returns a list of the names of the extensions (modules and themes) contained in the downloaded projects.</td></tr><tr><td valign="baseline">version-control=backup</td></td>Backup all project files before updates.</td></tr><tr><td valign="baseline">version-control=bzr</td></td>Quickly add/remove/commit your project changes to Bazaar.</td></tr><tr><td valign="baseline">version-control=svn</td></td>Quickly add/remove/commit your project changes to Subversion.</td></tr><tr><td valign="baseline">cache</td></td>Cache release XML and tarballs or git clones. Git clones use git's --reference option.</td></tr><tr><td valign="baseline">package-handler=wget</td></td>Download project packages using wget or curl.</td></tr><tr><td valign="baseline">package-handler=git_drupalorg</td></td>Use git.drupal.org to checkout and update projects.</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush dl drupal</td></td>Download latest recommended release of Drupal core.</td></tr><tr><td valign="baseline">drush dl drupal-7.x</td></td>Download latest 7.x development version of Drupal core.</td></tr><tr><td valign="baseline">drush dl drupal-6</td></td>Download latest recommended release of Drupal 6.x.</td></tr><tr><td valign="baseline">drush dl cck zen</td></td>Download latest versions of CCK and Zen projects.</td></tr><tr><td valign="baseline">drush dl og-1.3</td></td>Download a specfic version of Organic groups module for my version of Drupal.</td></tr><tr><td valign="baseline">drush dl diff-6.x-2.x</td></td>Download a specific development branch of diff module for a specific Drupal version.</td></tr><tr><td valign="baseline">drush dl views --select</td></td>Show a list of recent releases of the views project, prompt for which one to download.</td></tr><tr><td valign="baseline">drush dl webform --dev</td></td>Download the latest dev release of webform.</td></tr><tr><td valign="baseline">drush dl webform --cache</td></td>Download webform. Fetch and populate the download cache as needed.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>dl</name>
    <help><![CDATA[<html>Download projects from drupal.org or other sources.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>A comma delimited list of drupal.org project names, with optional version. Defaults to 'drupal'</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">destination</td></td>Path to which the project will be copied. If you're providing a relative path, note it is relative to the drupal root (if bootstrapped).</td></tr><tr><td valign="baseline">use-site-dir</td></td>Force to use the site specific directory. It will create the directory if it doesn't exist. If --destination is also present this option will be ignored.</td></tr><tr><td valign="baseline">notes</td></td>Show release notes after each project is downloaded.</td></tr><tr><td valign="baseline">variant</td></td>Only useful for install profiles. Possible values: 'full', 'projects', 'profile-only'.</td></tr><tr><td valign="baseline">select</td></td>Select the version to download interactively from a list of available releases.</td></tr><tr><td valign="baseline">drupal-project-rename</td></td>Alternate name for "drupal-x.y" directory when downloading Drupal project. Defaults to "drupal".</td></tr><tr><td valign="baseline">default-major</td></td>Specify the default major version of modules to download when there is no bootstrapped Drupal site. Defaults to "7".</td></tr><tr><td valign="baseline">skip</td></td>Skip automatic downloading of libraries (c.f. devel).</td></tr><tr><td valign="baseline">pipe</td></td>Returns a list of the names of the extensions (modules and themes) contained in the downloaded projects.</td></tr><tr><td valign="baseline">version-control=backup</td></td>Backup all project files before updates.</td></tr><tr><td valign="baseline">version-control=bzr</td></td>Quickly add/remove/commit your project changes to Bazaar.</td></tr><tr><td valign="baseline">version-control=svn</td></td>Quickly add/remove/commit your project changes to Subversion.</td></tr><tr><td valign="baseline">cache</td></td>Cache release XML and tarballs or git clones. Git clones use git's --reference option.</td></tr><tr><td valign="baseline">package-handler=wget</td></td>Download project packages using wget or curl.</td></tr><tr><td valign="baseline">package-handler=git_drupalorg</td></td>Use git.drupal.org to checkout and update projects.</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush dl drupal</td></td>Download latest recommended release of Drupal core.</td></tr><tr><td valign="baseline">drush dl drupal-7.x</td></td>Download latest 7.x development version of Drupal core.</td></tr><tr><td valign="baseline">drush dl drupal-6</td></td>Download latest recommended release of Drupal 6.x.</td></tr><tr><td valign="baseline">drush dl cck zen</td></td>Download latest versions of CCK and Zen projects.</td></tr><tr><td valign="baseline">drush dl og-1.3</td></td>Download a specfic version of Organic groups module for my version of Drupal.</td></tr><tr><td valign="baseline">drush dl diff-6.x-2.x</td></td>Download a specific development branch of diff module for a specific Drupal version.</td></tr><tr><td valign="baseline">drush dl views --select</td></td>Show a list of recent releases of the views project, prompt for which one to download.</td></tr><tr><td valign="baseline">drush dl webform --dev</td></td>Download the latest dev release of webform.</td></tr><tr><td valign="baseline">drush dl webform --cache</td></td>Download webform. Fetch and populate the download cache as needed.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>pm-enable</name>
    <help><![CDATA[<html>Enable one or more extensions (modules or themes).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">extensions</td></td>A list of modules or themes. You can use the * wildcard at the end of extension names to enable all matches.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">resolve-dependencies</td></td>Attempt to download any missing dependencies. At the moment, only works when the module name is the same as the project name.</td></tr><tr><td valign="baseline">skip</td></td>Skip automatic downloading of libraries (c.f. devel).</td></tr></table><br/> </html>]]></help>
    <params>extensions[=null]</params>
  </command>
  <command>
    <name>en</name>
    <help><![CDATA[<html>Enable one or more extensions (modules or themes).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">extensions</td></td>A list of modules or themes. You can use the * wildcard at the end of extension names to enable all matches.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">resolve-dependencies</td></td>Attempt to download any missing dependencies. At the moment, only works when the module name is the same as the project name.</td></tr><tr><td valign="baseline">skip</td></td>Skip automatic downloading of libraries (c.f. devel).</td></tr></table><br/> </html>]]></help>
    <params>extensions[=null]</params>
  </command>
  <command>
    <name>pm-info</name>
    <help><![CDATA[<html>Show detailed info for one or more extensions (modules or themes).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">extensions</td></td>A list of modules or themes. You can use the * wildcard at the end of extension names to show info for multiple matches. If no argument is provided it will show info for all available extensions.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: csv, json, list, table, var_export, yaml. Default is key-value-list.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
    <params>extensions[=null]</params>
  </command>
  <command>
    <name>pmi</name>
    <help><![CDATA[<html>Show detailed info for one or more extensions (modules or themes).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">extensions</td></td>A list of modules or themes. You can use the * wildcard at the end of extension names to show info for multiple matches. If no argument is provided it will show info for all available extensions.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: csv, json, list, table, var_export, yaml. Default is key-value-list.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
    <params>extensions[=null]</params>
  </command>
  <command>
    <name>pm-list</name>
    <help><![CDATA[<html>Show a list of available extensions (modules and themes).<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">type</td></td>Filter by extension type. Choices: module, theme.</td></tr><tr><td valign="baseline">status</td></td>Filter by extension status. Choices: enabled, disabled and/or 'not installed'. You can use multiple comma separated values. (i.e. --status="disabled,not installed").</td></tr><tr><td valign="baseline">package</td></td>Filter by project packages. You can use multiple comma separated values. (i.e. --package="Core - required,Other").</td></tr><tr><td valign="baseline">core</td></td>Filter out extensions that are not in drupal core.</td></tr><tr><td valign="baseline">no-core</td></td>Filter out extensions that are provided by drupal core.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>pml</name>
    <help><![CDATA[<html>Show a list of available extensions (modules and themes).<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">type</td></td>Filter by extension type. Choices: module, theme.</td></tr><tr><td valign="baseline">status</td></td>Filter by extension status. Choices: enabled, disabled and/or 'not installed'. You can use multiple comma separated values. (i.e. --status="disabled,not installed").</td></tr><tr><td valign="baseline">package</td></td>Filter by project packages. You can use multiple comma separated values. (i.e. --package="Core - required,Other").</td></tr><tr><td valign="baseline">core</td></td>Filter out extensions that are not in drupal core.</td></tr><tr><td valign="baseline">no-core</td></td>Filter out extensions that are provided by drupal core.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>pm-refresh</name>
    <help><![CDATA[<html>Refresh update status information.<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>rf</name>
    <help><![CDATA[<html>Refresh update status information.<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>pm-releasenotes</name>
    <help><![CDATA[<html>Print release notes for given projects.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>A list of project names, with optional version. Defaults to 'drupal'</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">html</td></td>Display releasenotes in HTML rather than plain text.</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush rln cck</td></td>Prints the release notes for the recommended version of CCK project.</td></tr><tr><td valign="baseline">drush rln token-1.13</td></td>View release notes of a specfic version of the Token project for my version of Drupal.</td></tr><tr><td valign="baseline">drush rln pathauto zen</td></td>View release notes for the recommended version of Pathauto and Zen projects.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>rln</name>
    <help><![CDATA[<html>Print release notes for given projects.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>A list of project names, with optional version. Defaults to 'drupal'</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">html</td></td>Display releasenotes in HTML rather than plain text.</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush rln cck</td></td>Prints the release notes for the recommended version of CCK project.</td></tr><tr><td valign="baseline">drush rln token-1.13</td></td>View release notes of a specfic version of the Token project for my version of Drupal.</td></tr><tr><td valign="baseline">drush rln pathauto zen</td></td>View release notes for the recommended version of Pathauto and Zen projects.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>pm-releases</name>
    <help><![CDATA[<html>Print release information for given projects.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>A list of drupal.org project names. Defaults to 'drupal'</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush pm-releases cck zen</td></td>View releases for cck and Zen projects for your Drupal version.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>rl</name>
    <help><![CDATA[<html>Print release information for given projects.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>A list of drupal.org project names. Defaults to 'drupal'</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush pm-releases cck zen</td></td>View releases for cck and Zen projects for your Drupal version.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>pm-uninstall</name>
    <help><![CDATA[<html>Uninstall one or more modules.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">modules</td></td>A list of modules.</td></tr></table><br/> No options<br/> </html>]]></help>
    <params>modules[=null]</params>
  </command>
  <command>
    <name>pm-update</name>
    <help><![CDATA[<html>Update Drupal core and contrib projects and apply any pending database updates (Same as pm-updatecode + updatedb).<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>up</name>
    <help><![CDATA[<html>Update Drupal core and contrib projects and apply any pending database updates (Same as pm-updatecode + updatedb).<br/>No arguments<br/> No options<br/> </html>]]></help>
  </command>
  <command>
    <name>pm-updatecode</name>
    <help><![CDATA[<html>Update Drupal core and contrib projects to latest recommended releases.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>Optional. A list of installed projects to update.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">notes</td></td>Show release notes for each project to be updated.</td></tr><tr><td valign="baseline">no-core</td></td>Only update modules and skip the core update.</td></tr><tr><td valign="baseline">check-updatedb</td></td>Check to see if an updatedb is needed after updating the code. Default is on; use --check-updatedb=0 to disable.</td></tr><tr><td valign="baseline">security-only</td></td>Only update modules that have security updates available.</td></tr><tr><td valign="baseline">lock</td></td>Add a persistent lock to remove the specified projects from consideration during updates. Locks may be removed with the --unlock parameter, or overridden by specifically naming the project as a parameter to pm-update or pm-updatecode. The lock does not affect pm-download. See also the update_advanced project for similar and improved functionality.</td></tr><tr><td valign="baseline">version-control=backup</td></td>Backup all project files before updates.</td></tr><tr><td valign="baseline">version-control=bzr</td></td>Quickly add/remove/commit your project changes to Bazaar.</td></tr><tr><td valign="baseline">version-control=svn</td></td>Quickly add/remove/commit your project changes to Subversion.</td></tr><tr><td valign="baseline">cache</td></td>Cache release XML and tarballs or git clones. Git clones use git's --reference option.</td></tr><tr><td valign="baseline">package-handler=wget</td></td>Download project packages using wget or curl.</td></tr><tr><td valign="baseline">package-handler=git_drupalorg</td></td>Use git.drupal.org to checkout and update projects.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush pm-updatecode --no-core</td></td>Update contrib projects, but skip core.</td></tr><tr><td valign="baseline">drush pm-updatestatus --format=csv --list-separator=" " --fields="name,existing_version,candidate_version,status_msg"</td></td>To show a list of projects with their update status, use pm-updatestatus instead of pm-updatecode.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>upc</name>
    <help><![CDATA[<html>Update Drupal core and contrib projects to latest recommended releases.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>Optional. A list of installed projects to update.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">notes</td></td>Show release notes for each project to be updated.</td></tr><tr><td valign="baseline">no-core</td></td>Only update modules and skip the core update.</td></tr><tr><td valign="baseline">check-updatedb</td></td>Check to see if an updatedb is needed after updating the code. Default is on; use --check-updatedb=0 to disable.</td></tr><tr><td valign="baseline">security-only</td></td>Only update modules that have security updates available.</td></tr><tr><td valign="baseline">lock</td></td>Add a persistent lock to remove the specified projects from consideration during updates. Locks may be removed with the --unlock parameter, or overridden by specifically naming the project as a parameter to pm-update or pm-updatecode. The lock does not affect pm-download. See also the update_advanced project for similar and improved functionality.</td></tr><tr><td valign="baseline">version-control=backup</td></td>Backup all project files before updates.</td></tr><tr><td valign="baseline">version-control=bzr</td></td>Quickly add/remove/commit your project changes to Bazaar.</td></tr><tr><td valign="baseline">version-control=svn</td></td>Quickly add/remove/commit your project changes to Subversion.</td></tr><tr><td valign="baseline">cache</td></td>Cache release XML and tarballs or git clones. Git clones use git's --reference option.</td></tr><tr><td valign="baseline">package-handler=wget</td></td>Download project packages using wget or curl.</td></tr><tr><td valign="baseline">package-handler=git_drupalorg</td></td>Use git.drupal.org to checkout and update projects.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush pm-updatecode --no-core</td></td>Update contrib projects, but skip core.</td></tr><tr><td valign="baseline">drush pm-updatestatus --format=csv --list-separator=" " --fields="name,existing_version,candidate_version,status_msg"</td></td>To show a list of projects with their update status, use pm-updatestatus instead of pm-updatecode.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>pm-updatestatus</name>
    <help><![CDATA[<html>Show a report of available minor updates to Drupal core and contrib projects.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>Optional. A list of installed projects to show.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">pipe</td></td>Return a list of the projects with any extensions enabled that need updating, one project per line.</td></tr><tr><td valign="baseline">security-only</td></td>Only update modules that have security updates available.</td></tr><tr><td valign="baseline">lock</td></td>Add a persistent lock to remove the specified projects from consideration during updates. Locks may be removed with the --unlock parameter, or overridden by specifically naming the project as a parameter to pm-update or pm-updatecode. The lock does not affect pm-download. See also the update_advanced project for similar and improved functionality.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>ups</name>
    <help><![CDATA[<html>Show a report of available minor updates to Drupal core and contrib projects.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">projects</td></td>Optional. A list of installed projects to show.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">pipe</td></td>Return a list of the projects with any extensions enabled that need updating, one project per line.</td></tr><tr><td valign="baseline">security-only</td></td>Only update modules that have security updates available.</td></tr><tr><td valign="baseline">lock</td></td>Add a persistent lock to remove the specified projects from consideration during updates. Locks may be removed with the --unlock parameter, or overridden by specifically naming the project as a parameter to pm-update or pm-updatecode. The lock does not affect pm-download. See also the update_advanced project for similar and improved functionality.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> </html>]]></help>
    <params>projects[=null]</params>
  </command>
  <command>
    <name>role-add-perm</name>
    <help><![CDATA[<html>Grant a specified permission to a role.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The role to modify. Required.</td></tr><tr><td valign="baseline">permission</td></td>The permission to grant. Required, unless the --module option is used.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">module</td></td>Select the permission to modify from an interactive list of all permissions available in the specified module.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-add-perm 'anonymous user' 'post comments'</td></td>Allow anonymous users to put their own advertisements on your site.</td></tr><tr><td valign="baseline">drush role-add-perm 'authenticated user' --module=node</td></td>Select a permission from "node" permissions to add to authenticated users.</td></tr></table><br/> </html>]]></help>
    <params>role permission[=null]</params>
  </command>
  <command>
    <name>rap</name>
    <help><![CDATA[<html>Grant a specified permission to a role.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The role to modify. Required.</td></tr><tr><td valign="baseline">permission</td></td>The permission to grant. Required, unless the --module option is used.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">module</td></td>Select the permission to modify from an interactive list of all permissions available in the specified module.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-add-perm 'anonymous user' 'post comments'</td></td>Allow anonymous users to put their own advertisements on your site.</td></tr><tr><td valign="baseline">drush role-add-perm 'authenticated user' --module=node</td></td>Select a permission from "node" permissions to add to authenticated users.</td></tr></table><br/> </html>]]></help>
    <params>role permission[=null]</params>
  </command>
  <command>
    <name>role-create</name>
    <help><![CDATA[<html>Create a new role.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">machine_name</td></td>The symbolic machine name for the role. Required.</td></tr><tr><td valign="baseline">human-readable_name</td></td>A descriptive name for the role. Optional; Drupal 8 only. Ignored in D6 and D7.</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-create 'test role'</td></td>Create a new role 'test role' on D6 or D7; auto-assign the rid. On D8, 'test role' is the rid, and the human-readable name is set to 'Test role'.</td></tr><tr><td valign="baseline">drush role-create 'test role' 'Test role'</td></td>Create a new role with a machine name of 'test role', and a human-readable name of 'Test role'. On D6 and D7, behaves as the previous example.</td></tr></table><br/> </html>]]></help>
    <params>machine_name[=null] human-readable_name[=null]</params>
  </command>
  <command>
    <name>rcrt</name>
    <help><![CDATA[<html>Create a new role.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">machine_name</td></td>The symbolic machine name for the role. Required.</td></tr><tr><td valign="baseline">human-readable_name</td></td>A descriptive name for the role. Optional; Drupal 8 only. Ignored in D6 and D7.</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-create 'test role'</td></td>Create a new role 'test role' on D6 or D7; auto-assign the rid. On D8, 'test role' is the rid, and the human-readable name is set to 'Test role'.</td></tr><tr><td valign="baseline">drush role-create 'test role' 'Test role'</td></td>Create a new role with a machine name of 'test role', and a human-readable name of 'Test role'. On D6 and D7, behaves as the previous example.</td></tr></table><br/> </html>]]></help>
    <params>machine_name[=null] human-readable_name[=null]</params>
  </command>
  <command>
    <name>role-delete</name>
    <help><![CDATA[<html>Delete a role.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">machine_name</td></td>The symbolic machine name for the role. Required. In D6 and D7, this may also be a numeric role ID.</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-delete 'test role'</td></td>Delete the role 'test role'.</td></tr></table><br/> </html>]]></help>
    <params>machine_name[=null]</params>
  </command>
  <command>
    <name>rdel</name>
    <help><![CDATA[<html>Delete a role.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">machine_name</td></td>The symbolic machine name for the role. Required. In D6 and D7, this may also be a numeric role ID.</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-delete 'test role'</td></td>Delete the role 'test role'.</td></tr></table><br/> </html>]]></help>
    <params>machine_name[=null]</params>
  </command>
  <command>
    <name>role-list</name>
    <help><![CDATA[<html>Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The role to list. Optional; if specified, lists all permissions assigned to that role. If no role is specified, lists all of the roles available on the system.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">filter</td></td>Limits the list of roles to only those that have been assigned the specified permission. Optional; may not be specified if a role argument is provided.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-list --filter='administer nodes'</td></td>Display a list of roles that have the administer nodes permission assigned.</td></tr><tr><td valign="baseline">drush role-list 'anonymous user'</td></td>Display all of the permissions assigned to the anonymous user role.</td></tr></table><br/> </html>]]></help>
    <params>role[=null]</params>
  </command>
  <command>
    <name>rls</name>
    <help><![CDATA[<html>Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The role to list. Optional; if specified, lists all permissions assigned to that role. If no role is specified, lists all of the roles available on the system.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">filter</td></td>Limits the list of roles to only those that have been assigned the specified permission. Optional; may not be specified if a role argument is provided.</td></tr><tr><td valign="baseline">format</td></td>Select output format. Available: table, csv, json, list, var_export, yaml. Default is table.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-list --filter='administer nodes'</td></td>Display a list of roles that have the administer nodes permission assigned.</td></tr><tr><td valign="baseline">drush role-list 'anonymous user'</td></td>Display all of the permissions assigned to the anonymous user role.</td></tr></table><br/> </html>]]></help>
    <params>role[=null]</params>
  </command>
  <command>
    <name>role-remove-perm</name>
    <help><![CDATA[<html>Remove a specified permission from a role.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The role to modify.</td></tr><tr><td valign="baseline">permission</td></td>The permission to remove. Required, unless the --module option is used.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">module</td></td>Select the permission to modify from an interactive list of all permissions available in the specified module.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-remove-perm 'anonymous user' 'access content'</td></td>Hide content from anonymous users.</td></tr></table><br/> </html>]]></help>
    <params>role permission[=null]</params>
  </command>
  <command>
    <name>rmp</name>
    <help><![CDATA[<html>Remove a specified permission from a role.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The role to modify.</td></tr><tr><td valign="baseline">permission</td></td>The permission to remove. Required, unless the --module option is used.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">module</td></td>Select the permission to modify from an interactive list of all permissions available in the specified module.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush role-remove-perm 'anonymous user' 'access content'</td></td>Hide content from anonymous users.</td></tr></table><br/> </html>]]></help>
    <params>role permission[=null]</params>
  </command>
  <command>
    <name>sql-cli</name>
    <help><![CDATA[<html>Open a SQL command-line interface using Drupal's credentials.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">A</td></td>Skip reading table information. This gives a quicker start of mysql.</td></tr><tr><td valign="baseline">database</td></td>The DB connection key if using multiple connections in settings.php.</td></tr><tr><td valign="baseline">target</td></td>The name of a target within the specified database connection. Defaults to 'default'.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush sql-cli</td></td>Open a SQL command-line interface using Drupal's credentials.</td></tr><tr><td valign="baseline">drush sql-cli -A</td></td>Open a SQL command-line interface using Drupal's credentials and skip reading table information.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>sqlc</name>
    <help><![CDATA[<html>Open a SQL command-line interface using Drupal's credentials.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">A</td></td>Skip reading table information. This gives a quicker start of mysql.</td></tr><tr><td valign="baseline">database</td></td>The DB connection key if using multiple connections in settings.php.</td></tr><tr><td valign="baseline">target</td></td>The name of a target within the specified database connection. Defaults to 'default'.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush sql-cli</td></td>Open a SQL command-line interface using Drupal's credentials.</td></tr><tr><td valign="baseline">drush sql-cli -A</td></td>Open a SQL command-line interface using Drupal's credentials and skip reading table information.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>sql-connect</name>
    <help><![CDATA[<html>A string for connecting to the DB.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">database</td></td>The DB connection key if using multiple connections in settings.php.</td></tr><tr><td valign="baseline">target</td></td>The name of a target within the specified database connection. Defaults to 'default'.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">`drush sql-connect` < example.sql</td></td>Import sql statements from a file into the current database.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>sql-create</name>
    <help><![CDATA[<html>Create a database.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">db-su</td></td>Account to use when creating a new database. Optional.</td></tr><tr><td valign="baseline">db-su-pw</td></td>Password for the "db-su" account. Optional.</td></tr><tr><td valign="baseline">database</td></td>The DB connection key if using multiple connections in settings.php.</td></tr><tr><td valign="baseline">target</td></td>The name of a target within the specified database connection. Defaults to 'default'.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush sql-create</td></td>Create the database for the current site.</td></tr><tr><td valign="baseline">drush @site.test sql-create</td></td>Create the database as specified for @site.test.</td></tr><tr><td valign="baseline">drush sql-create --db-su=root --db-su-pw=rootpassword --db-url="mysql://drupal_db_user:drupal_db_password@127.0.0.1/drupal_db"</td></td>Create the database as specified in the db-url option.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>sql-drop</name>
    <help><![CDATA[<html>Drop all tables in a given database.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">yes</td></td>Skip confirmation and proceed.</td></tr><tr><td valign="baseline">result-file</td></td>Save to a file. The file should be relative to Drupal root. Recommended.</td></tr><tr><td valign="baseline">database</td></td>The DB connection key if using multiple connections in settings.php.</td></tr><tr><td valign="baseline">target</td></td>The name of a target within the specified database connection. Defaults to 'default'.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>sql-dump</name>
    <help><![CDATA[<html>Exports the Drupal DB as SQL using mysqldump or equivalent.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">result-file</td></td>Save to a file. The file should be relative to Drupal root. If --result-file is provided with no value, then date based filename will be created under ~/drush-backups directory.</td></tr><tr><td valign="baseline">skip-tables-key</td></td>A key in the $skip_tables array. @see example.drushrc.php. Optional.</td></tr><tr><td valign="baseline">structure-tables-key</td></td>A key in the $structure_tables array. @see example.drushrc.php. Optional.</td></tr><tr><td valign="baseline">tables-key</td></td>A key in the $tables array. Optional.</td></tr><tr><td valign="baseline">skip-tables-list</td></td>A comma-separated list of tables to exclude completely. Optional.</td></tr><tr><td valign="baseline">structure-tables-list</td></td>A comma-separated list of tables to include for structure, but not data. Optional.</td></tr><tr><td valign="baseline">tables-list</td></td>A comma-separated list of tables to transfer. Optional.</td></tr><tr><td valign="baseline">ordered-dump</td></td>Order by primary key and add line breaks for efficient diff in revision control. Also, faster rsync. Slows down the dump. Mysql only.</td></tr><tr><td valign="baseline">create-db</td></td>Omit DROP TABLE statements. Postgres and Oracle only. Used by sql-sync, since including the DROP TABLE statements interfere with the import when the database is created.</td></tr><tr><td valign="baseline">data-only</td></td>Dump data without statements to create any of the schema.</td></tr><tr><td valign="baseline">gzip</td></td>Compress the dump using the gzip program which must be in your $PATH.</td></tr><tr><td valign="baseline">database</td></td>The DB connection key if using multiple connections in settings.php.</td></tr><tr><td valign="baseline">target</td></td>The name of a target within the specified database connection. Defaults to 'default'.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush sql-dump --result-file=../18.sql</td></td>Save SQL dump to the directory above Drupal root.</td></tr><tr><td valign="baseline">drush sql-dump --skip-tables-key=common</td></td>Skip standard tables. @see example.drushrc.php</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>sql-query</name>
    <help><![CDATA[<html>Execute a query against the site database.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">query</td></td>An SQL query. Ignored if 'file' is provided.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">result-file</td></td>Save to a file. The file should be relative to Drupal root. Optional.</td></tr><tr><td valign="baseline">file</td></td>Path to a file containing the SQL to be run.</td></tr><tr><td valign="baseline">extra</td></td>Add custom options to the mysql command.</td></tr><tr><td valign="baseline">db-prefix</td></td>Enable replacement of braces in your query.</td></tr><tr><td valign="baseline">db-spec</td></td>A database specification</td></tr><tr><td valign="baseline">database</td></td>The DB connection key if using multiple connections in settings.php.</td></tr><tr><td valign="baseline">target</td></td>The name of a target within the specified database connection. Defaults to 'default'.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush sql-query "SELECT * FROM users WHERE uid=1"</td></td>Browse user record. Table prefixes, if used, must be added to table names by hand.</td></tr><tr><td valign="baseline">drush sql-query --db-prefix "SELECT * FROM {users} WHERE uid=1"</td></td>Browse user record. Table prefixes are honored. Caution: curly-braces will be stripped from all portions of the query.</td></tr><tr><td valign="baseline">`drush sql-connect` < example.sql</td></td>Import sql statements from a file into the current database.</td></tr><tr><td valign="baseline">drush sql-query --file=example.sql</td></td>Alternate way to import sql statements from a file.</td></tr></table><br/> </html>]]></help>
    <params>query[=null]</params>
  </command>
  <command>
    <name>sqlq</name>
    <help><![CDATA[<html>Execute a query against the site database.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">query</td></td>An SQL query. Ignored if 'file' is provided.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">result-file</td></td>Save to a file. The file should be relative to Drupal root. Optional.</td></tr><tr><td valign="baseline">file</td></td>Path to a file containing the SQL to be run.</td></tr><tr><td valign="baseline">extra</td></td>Add custom options to the mysql command.</td></tr><tr><td valign="baseline">db-prefix</td></td>Enable replacement of braces in your query.</td></tr><tr><td valign="baseline">db-spec</td></td>A database specification</td></tr><tr><td valign="baseline">database</td></td>The DB connection key if using multiple connections in settings.php.</td></tr><tr><td valign="baseline">target</td></td>The name of a target within the specified database connection. Defaults to 'default'.</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush sql-query "SELECT * FROM users WHERE uid=1"</td></td>Browse user record. Table prefixes, if used, must be added to table names by hand.</td></tr><tr><td valign="baseline">drush sql-query --db-prefix "SELECT * FROM {users} WHERE uid=1"</td></td>Browse user record. Table prefixes are honored. Caution: curly-braces will be stripped from all portions of the query.</td></tr><tr><td valign="baseline">`drush sql-connect` < example.sql</td></td>Import sql statements from a file into the current database.</td></tr><tr><td valign="baseline">drush sql-query --file=example.sql</td></td>Alternate way to import sql statements from a file.</td></tr></table><br/> </html>]]></help>
    <params>query[=null]</params>
  </command>
  <command>
    <name>sql-sanitize</name>
    <help><![CDATA[<html>Run sanitization operations on the current database.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">sanitize-password</td></td>The password to assign to all accounts in the sanitization operation, or "no" to keep passwords unchanged. Default is "password".</td></tr><tr><td valign="baseline">sanitize-email</td></td>The pattern for test email addresses in the sanitization operation, or "no" to keep email addresses unchanged. May contain replacement patterns %uid, %mail or %name. Default is "user+%uid@localhost".</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>sqlsan</name>
    <help><![CDATA[<html>Run sanitization operations on the current database.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">sanitize-password</td></td>The password to assign to all accounts in the sanitization operation, or "no" to keep passwords unchanged. Default is "password".</td></tr><tr><td valign="baseline">sanitize-email</td></td>The pattern for test email addresses in the sanitization operation, or "no" to keep email addresses unchanged. May contain replacement patterns %uid, %mail or %name. Default is "user+%uid@localhost".</td></tr><tr><td valign="baseline">db-url</td></td>A Drupal 6 style database URL.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>sql-sync</name>
    <help><![CDATA[<html>Copy and import source database to target database. Transfers via rsync.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">from</td></td>Name of subdirectory within /sites or a site-alias.</td></tr><tr><td valign="baseline">to</td></td>Name of subdirectory within /sites or a site-alias.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">skip-tables-key</td></td>A key in the $skip_tables array. @see example.drushrc.php. Optional.</td></tr><tr><td valign="baseline">skip-tables-list</td></td>A comma-separated list of tables to exclude completely. Optional.</td></tr><tr><td valign="baseline">structure-tables-key</td></td>A key in the $structure_tables array. @see example.drushrc.php. Optional.</td></tr><tr><td valign="baseline">structure-tables-list</td></td>A comma-separated list of tables to include for structure, but not data. Optional.</td></tr><tr><td valign="baseline">tables-key</td></td>A key in the $tables array. Optional.</td></tr><tr><td valign="baseline">tables-list</td></td>A comma-separated list of tables to transfer. Optional.</td></tr><tr><td valign="baseline">cache</td></td>Skip dump if result file exists and is less than "cache" hours old. Optional; default is 24 hours.</td></tr><tr><td valign="baseline">no-cache</td></td>Do not cache the sql-dump file.</td></tr><tr><td valign="baseline">no-dump</td></td>Do not dump the sql database; always use an existing dump file.</td></tr><tr><td valign="baseline">source-db-url</td></td>Database specification for source system to dump from.</td></tr><tr><td valign="baseline">source-remote-port</td></td>Override sql database port number in source-db-url. Optional.</td></tr><tr><td valign="baseline">source-remote-host</td></td>Remote machine to run sql-dump file on. Optional; default is local machine.</td></tr><tr><td valign="baseline">source-dump</td></td>Path to dump file. Optional; default is to create a temporary file.</td></tr><tr><td valign="baseline">source-database</td></td>A key in the $db_url (D6) or $databases (D7+) array which provides the data.</td></tr><tr><td valign="baseline">source-target</td></td>A key within the SOURCE database identifying a particular server in the database group.</td></tr><tr><td valign="baseline">target-db-url</td></td></td></tr><tr><td valign="baseline">target-remote-port</td></td></td></tr><tr><td valign="baseline">target-remote-host</td></td></td></tr><tr><td valign="baseline">target-dump</td></td></td></tr><tr><td valign="baseline">target-database</td></td>A key in the $db_url (D6) or $databases (D7+) array which shall receive the data.</td></tr><tr><td valign="baseline">target-target</td></td>Oy. A key within the TARGET database identifying a particular server in the database group.</td></tr><tr><td valign="baseline">temp</td></td>Use a temporary file to hold dump files. Implies --no-cache.</td></tr><tr><td valign="baseline">dump-dir</td></td>Directory to store sql dump files in when --source-dump or --target-dump are not used.</td></tr><tr><td valign="baseline">create-db</td></td>Create a new database before importing the database dump on the target machine.</td></tr><tr><td valign="baseline">db-su</td></td>Account to use when creating a new database. Optional.</td></tr><tr><td valign="baseline">db-su-pw</td></td>Password for the "db-su" account. Optional.</td></tr><tr><td valign="baseline">no-ordered-dump</td></td>Do not pass --ordered-dump to sql-dump. sql-sync orders the dumpfile by default in order to increase the efficiency of rsync.</td></tr><tr><td valign="baseline">sanitize</td></td>Obscure email addresses and reset passwords in the user table post-sync. Optional.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush sql-sync @prod @dev</td></td>Copy the DB defined in sites/prod to the DB in sites/dev.</td></tr></table><br/> </html>]]></help>
    <params>from[=null] to[=null]</params>
  </command>
  <command>
    <name>user-add-role</name>
    <help><![CDATA[<html>Add a role to the specified user accounts.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The name of the role to add</td></tr><tr><td valign="baseline">users</td></td>(optional) A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">uid</td></td>A comma delimited list of uids</td></tr><tr><td valign="baseline">name</td></td>A comma delimited list of user names</td></tr><tr><td valign="baseline">mail</td></td>A comma delimited list of user mail addresses</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-add-role "power user" 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com</td></td>Add the "power user" role to the accounts with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com</td></tr></table><br/> </html>]]></help>
    <params>role users[=null]</params>
  </command>
  <command>
    <name>urol</name>
    <help><![CDATA[<html>Add a role to the specified user accounts.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The name of the role to add</td></tr><tr><td valign="baseline">users</td></td>(optional) A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">uid</td></td>A comma delimited list of uids</td></tr><tr><td valign="baseline">name</td></td>A comma delimited list of user names</td></tr><tr><td valign="baseline">mail</td></td>A comma delimited list of user mail addresses</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-add-role "power user" 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com</td></td>Add the "power user" role to the accounts with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com</td></tr></table><br/> </html>]]></help>
    <params>role users[=null]</params>
  </command>
  <command>
    <name>user-block</name>
    <help><![CDATA[<html>Block the specified user(s).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">users</td></td>A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">uid</td></td>A comma delimited list of uids to block</td></tr><tr><td valign="baseline">name</td></td>A comma delimited list of user names to block</td></tr><tr><td valign="baseline">mail</td></td>A comma delimited list of user mail addresses to block</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-block 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com</td></td>Block the users with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com</td></tr></table><br/> </html>]]></help>
    <params>users</params>
  </command>
  <command>
    <name>ublk</name>
    <help><![CDATA[<html>Block the specified user(s).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">users</td></td>A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">uid</td></td>A comma delimited list of uids to block</td></tr><tr><td valign="baseline">name</td></td>A comma delimited list of user names to block</td></tr><tr><td valign="baseline">mail</td></td>A comma delimited list of user mail addresses to block</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-block 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com</td></td>Block the users with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com</td></tr></table><br/> </html>]]></help>
    <params>users</params>
  </command>
  <command>
    <name>user-cancel</name>
    <help><![CDATA[<html>Cancel a user account with the specified name.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of the account to cancel</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-cancel username</td></td>Cancel the user account with the name username and anonymize all content created by that user.</td></tr></table><br/> </html>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>ucan</name>
    <help><![CDATA[<html>Cancel a user account with the specified name.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of the account to cancel</td></tr></table><br/> No options<br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-cancel username</td></td>Cancel the user account with the name username and anonymize all content created by that user.</td></tr></table><br/> </html>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>user-create</name>
    <help><![CDATA[<html>Create a user account with the specified name.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of the account to add</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">password</td></td>The password for the new account</td></tr><tr><td valign="baseline">mail</td></td>The email address for the new account</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-create newuser --mail="person@example.com" --password="letmein"</td></td>Create a new user account with the name newuser, the email address person@example.com, and the password letmein</td></tr></table><br/> </html>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>ucrt</name>
    <help><![CDATA[<html>Create a user account with the specified name.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of the account to add</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">password</td></td>The password for the new account</td></tr><tr><td valign="baseline">mail</td></td>The email address for the new account</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-create newuser --mail="person@example.com" --password="letmein"</td></td>Create a new user account with the name newuser, the email address person@example.com, and the password letmein</td></tr></table><br/> </html>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>user-information</name>
    <help><![CDATA[<html>Print information about the specified user(s).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">users</td></td>A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: csv, json, list, table, var_export, yaml. Default is key-value-list.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-information 2,3,someguy,somegal,billgates@microsoft.com</td></td>Display information about any users with uids, names, or mail addresses matching the strings between commas.</td></tr></table><br/> </html>]]></help>
    <params>users</params>
  </command>
  <command>
    <name>uinf</name>
    <help><![CDATA[<html>Print information about the specified user(s).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">users</td></td>A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">format</td></td>Select output format. Available: csv, json, list, table, var_export, yaml. Default is key-value-list.</td></tr><tr><td valign="baseline">fields</td></td>Fields to output.</td></tr><tr><td valign="baseline">list-separator</td></td>Specify how elements in a list should be separated. In lists of lists, this applies to the elements in the inner lists.</td></tr><tr><td valign="baseline">line-separator</td></td>In nested lists of lists, specify how the outer lists ("lines") should be separated.</td></tr><tr><td valign="baseline">field-labels</td></td>Add field labels before first line of data. Default is on; --field-labels=0 to disable.</td></tr><tr><td valign="baseline">format=config</td></td>A configuration file in executable php format. The variable name is "config", and the variable keys are taken from the output data array's keys.</td></tr><tr><td valign="baseline">format=csv</td></td>A list of values, one per row, each of which is a comma-separated list of values.</td></tr><tr><td valign="baseline">format=json</td></td>Javascript Object Notation.</td></tr><tr><td valign="baseline">format=labeled-export</td></td>A list of php exports, labeled with a name.</td></tr><tr><td valign="baseline">format=list</td></td>A simple list of values.</td></tr><tr><td valign="baseline">format=php</td></td>A serialized php string.</td></tr><tr><td valign="baseline">format=print-r</td></td>Output via php print_r function.</td></tr><tr><td valign="baseline">format=table</td></td>A formatted, word-wrapped table.</td></tr><tr><td valign="baseline">format=var_export</td></td>An array in executable php format.</td></tr><tr><td valign="baseline">format=variables</td></td>A list of php variable assignments.</td></tr><tr><td valign="baseline">format=yaml</td></td>Yaml output format.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-information 2,3,someguy,somegal,billgates@microsoft.com</td></td>Display information about any users with uids, names, or mail addresses matching the strings between commas.</td></tr></table><br/> </html>]]></help>
    <params>users</params>
  </command>
  <command>
    <name>user-login</name>
    <help><![CDATA[<html>Display a one time login link for the given user account (defaults to uid 1).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">user</td></td>An optional uid, user name, or email address for the user to log in as. Default is to log in as uid 1. The uid/name/mail options take priority if specified.</td></tr><tr><td valign="baseline">path</td></td>Optional path to redirect to after logging in.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">browser</td></td>Optional value denotes which browser to use (defaults to operating system default). Set to 0 to suppress opening a browser.</td></tr><tr><td valign="baseline">uid</td></td>A uid to log in as.</td></tr><tr><td valign="baseline">name</td></td>A user name to log in as.</td></tr><tr><td valign="baseline">mail</td></td>A user mail address to log in as.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-login ryan node/add/blog</td></td>Displays and opens default web browser (if configured or detected) for a one-time login link for the user with the username ryan and redirect to the path node/add/blog.</td></tr><tr><td valign="baseline">drush user-login --browser=firefox --mail=drush@example.org admin/settings/performance</td></td>Open firefox web browser, login as the user with the e-mail address drush@example.org and redirect to the path admin/settings/performance.</td></tr></table><br/> </html>]]></help>
    <params>user[=null] path[=null]</params>
  </command>
  <command>
    <name>uli</name>
    <help><![CDATA[<html>Display a one time login link for the given user account (defaults to uid 1).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">user</td></td>An optional uid, user name, or email address for the user to log in as. Default is to log in as uid 1. The uid/name/mail options take priority if specified.</td></tr><tr><td valign="baseline">path</td></td>Optional path to redirect to after logging in.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">browser</td></td>Optional value denotes which browser to use (defaults to operating system default). Set to 0 to suppress opening a browser.</td></tr><tr><td valign="baseline">uid</td></td>A uid to log in as.</td></tr><tr><td valign="baseline">name</td></td>A user name to log in as.</td></tr><tr><td valign="baseline">mail</td></td>A user mail address to log in as.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-login ryan node/add/blog</td></td>Displays and opens default web browser (if configured or detected) for a one-time login link for the user with the username ryan and redirect to the path node/add/blog.</td></tr><tr><td valign="baseline">drush user-login --browser=firefox --mail=drush@example.org admin/settings/performance</td></td>Open firefox web browser, login as the user with the e-mail address drush@example.org and redirect to the path admin/settings/performance.</td></tr></table><br/> </html>]]></help>
    <params>user[=null] path[=null]</params>
  </command>
  <command>
    <name>user-password</name>
    <help><![CDATA[<html>(Re)Set the password for the user account with the specified name.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of the account to modify.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">password</td></td>The new password for the account.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-password someuser --password="correct horse battery staple"</td></td>Set the password for the username someuser. @see xkcd.com/936</td></tr></table><br/> </html>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>upwd</name>
    <help><![CDATA[<html>(Re)Set the password for the user account with the specified name.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">name</td></td>The name of the account to modify.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">password</td></td>The new password for the account.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-password someuser --password="correct horse battery staple"</td></td>Set the password for the username someuser. @see xkcd.com/936</td></tr></table><br/> </html>]]></help>
    <params>name</params>
  </command>
  <command>
    <name>user-remove-role</name>
    <help><![CDATA[<html>Remove a role from the specified user accounts.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The name of the role to remove</td></tr><tr><td valign="baseline">users</td></td>(optional) A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">uid</td></td>A comma delimited list of uids</td></tr><tr><td valign="baseline">name</td></td>A comma delimited list of user names</td></tr><tr><td valign="baseline">mail</td></td>A comma delimited list of user mail addresses</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-remove-role "power user" 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com</td></td>Remove the "power user" role from the accounts with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com</td></tr></table><br/> </html>]]></help>
    <params>role users[=null]</params>
  </command>
  <command>
    <name>urrol</name>
    <help><![CDATA[<html>Remove a role from the specified user accounts.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">role</td></td>The name of the role to remove</td></tr><tr><td valign="baseline">users</td></td>(optional) A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">uid</td></td>A comma delimited list of uids</td></tr><tr><td valign="baseline">name</td></td>A comma delimited list of user names</td></tr><tr><td valign="baseline">mail</td></td>A comma delimited list of user mail addresses</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-remove-role "power user" 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com</td></td>Remove the "power user" role from the accounts with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com</td></tr></table><br/> </html>]]></help>
    <params>role users[=null]</params>
  </command>
  <command>
    <name>user-unblock</name>
    <help><![CDATA[<html>Unblock the specified user(s).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">users</td></td>A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">uid</td></td>A comma delimited list of uids to unblock</td></tr><tr><td valign="baseline">name</td></td>A comma delimited list of user names to unblock</td></tr><tr><td valign="baseline">mail</td></td>A comma delimited list of user mail addresses to unblock</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-unblock 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com</td></td>Unblock the users with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com</td></tr></table><br/> </html>]]></help>
    <params>users</params>
  </command>
  <command>
    <name>uublk</name>
    <help><![CDATA[<html>Unblock the specified user(s).<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">users</td></td>A comma delimited list of uids, user names, or email addresses.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">uid</td></td>A comma delimited list of uids to unblock</td></tr><tr><td valign="baseline">name</td></td>A comma delimited list of user names to unblock</td></tr><tr><td valign="baseline">mail</td></td>A comma delimited list of user mail addresses to unblock</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush user-unblock 5,user3 --uid=2,3 --name=someguy,somegal --mail=billgates@microsoft.com</td></td>Unblock the users with name, id, or email 5 or user3, uids 2 and 3, names someguy and somegal, and email address of billgates@microsoft.com</td></tr></table><br/> </html>]]></help>
    <params>users</params>
  </command>
  <command>
    <name>make</name>
    <help><![CDATA[<html>Turns a makefile into a working Drupal codebase.<br/><table> <tr><td><strong>Arguments:</strong></td><tr><td valign="baseline">makefile</td></td>Filename of the makefile to use for this build.</td></tr><tr><td valign="baseline">build_path</td></td>The path at which to build the makefile.</td></tr></table><br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">version</td></td>Print the make API version and exit.</td></tr><tr><td valign="baseline">concurrency</td></td>Set the number of concurrent projects that will be processed at the same time. The default is 1.</td></tr><tr><td valign="baseline">contrib-destination</td></td>Specify a path under which modules and themes should be placed. Defaults to sites/all for Drupal 6,7 and the corresponding directory in the Drupal root for Drupal 8 and above.</td></tr><tr><td valign="baseline">force-complete</td></td>Force a complete build even if errors occur.</td></tr><tr><td valign="baseline">ignore-checksums</td></td>Ignore md5 checksums for downloads.</td></tr><tr><td valign="baseline">md5</td></td>Output an md5 hash of the current build after completion. Use --md5=print to print to stdout.</td></tr><tr><td valign="baseline">make-update-default-url</td></td>The default location to load the XML update information from.</td></tr><tr><td valign="baseline">no-cache</td></td>Do not use the pm-download caching (defaults to cache enabled).</td></tr><tr><td valign="baseline">no-clean</td></td>Leave temporary build directories in place instead of cleaning up after completion.</td></tr><tr><td valign="baseline">no-core</td></td>Do not require a Drupal core project to be specified.</td></tr><tr><td valign="baseline">no-patch-txt</td></td>Do not write a PATCHES.txt file in the directory of each patched project.</td></tr><tr><td valign="baseline">no-gitinfofile</td></td>Do not modify .info files when cloning from Git.</td></tr><tr><td valign="baseline">prepare-install</td></td>Prepare the built site for installation. Generate a properly permissioned settings.php and files directory.</td></tr><tr><td valign="baseline">tar</td></td>Generate a tar archive of the build. The output filename will be [build path].tar.gz.</td></tr><tr><td valign="baseline">test</td></td>Run a temporary test build and clean up.</td></tr><tr><td valign="baseline">translations</td></td>Retrieve translations for the specified comma-separated list of language(s) if available for all projects.</td></tr><tr><td valign="baseline">working-copy</td></td>Preserves VCS directories, like .git, for projects downloaded using such methods.</td></tr><tr><td valign="baseline">download-mechanism</td></td>How to download files. Should be autodetected, but this is an override if it doesn't work. Options are "curl" and "make" (a native download method).</td></tr><tr><td valign="baseline">projects</td></td>Restrict the make to this comma-separated list of projects. To specify all projects, pass *.</td></tr><tr><td valign="baseline">libraries</td></td>Restrict the make to this comma-separated list of libraries. To specify all libraries, pass *.</td></tr><tr><td valign="baseline">allow-override</td></td>Restrict the make options to this comma-separated list of options.</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush make example.make example</td></td>Build the example.make makefile in the example directory.</td></tr><tr><td valign="baseline">drush make --no-core --contrib-destination=. installprofile.make</td></td>Build an installation profile within an existing Drupal site</td></tr><tr><td valign="baseline">drush make http://example.com/example.make example</td></td>Build the remote example.make makefile in the example directory.</td></tr></table><br/> </html>]]></help>
    <params>makefile[=null] build_path[=null]</params>
  </command>
  <command>
    <name>make-generate</name>
    <help><![CDATA[<html>Generate a makefile from the current Drupal site.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">exclude-versions</td></td>Exclude all version numbers (default is include all version numbers) or optionally specify a list of projects to exclude from versioning</td></tr><tr><td valign="baseline">include-versions</td></td>Include a specific list of projects, while all other projects remain unversioned in the makefile (so implies --exclude-versions)</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush generate-makefile example.make</td></td>Generate a makefile with ALL projects versioned (should a project have a known version number)</td></tr><tr><td valign="baseline">drush generate-makefile example.make --exclude-versions</td></td>Generate a makefile with NO projects versioned</td></tr><tr><td valign="baseline">drush generate-makefile example.make --exclude-versions=drupal,views,cck</td></td>Generate a makefile with ALL projects versioned EXCEPT core, Views and CCK</td></tr><tr><td valign="baseline">drush generate-makefile example.make --include-versions=admin_menu,og,ctools (--exclude-versions)</td></td>Generate a makefile with NO projects versioned EXCEPT Admin Menu, OG and CTools.</td></tr></table><br/> </html>]]></help>
  </command>
  <command>
    <name>generate-makefile</name>
    <help><![CDATA[<html>Generate a makefile from the current Drupal site.<br/>No arguments<br/> <table> <tr><td><strong>Options:</strong></td><tr><td valign="baseline">exclude-versions</td></td>Exclude all version numbers (default is include all version numbers) or optionally specify a list of projects to exclude from versioning</td></tr><tr><td valign="baseline">include-versions</td></td>Include a specific list of projects, while all other projects remain unversioned in the makefile (so implies --exclude-versions)</td></tr><tr><td valign="baseline">source</td></td>The base URL which provides project release history in XML. Defaults to http://updates.drupal.org/release-history.</td></tr><tr><td valign="baseline">dev</td></td>Work with development releases solely.</td></tr></table><br/> <table> <tr><td><strong>Examples:</strong></td><tr><td valign="baseline">drush generate-makefile example.make</td></td>Generate a makefile with ALL projects versioned (should a project have a known version number)</td></tr><tr><td valign="baseline">drush generate-makefile example.make --exclude-versions</td></td>Generate a makefile with NO projects versioned</td></tr><tr><td valign="baseline">drush generate-makefile example.make --exclude-versions=drupal,views,cck</td></td>Generate a makefile with ALL projects versioned EXCEPT core, Views and CCK</td></tr><tr><td valign="baseline">drush generate-makefile example.make --include-versions=admin_menu,og,ctools (--exclude-versions)</td></td>Generate a makefile with NO projects versioned EXCEPT Admin Menu, OG and CTools.</td></tr></table><br/> </html>]]></help>
  </command>
</framework>

