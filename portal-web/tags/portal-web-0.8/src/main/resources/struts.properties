# struts.configuration=org.apache.struts2.config.DefaultConfiguration
# development / production mode

# this is commented out because in devMode, sitemesh will swallow
# freemarker errors and surface them as ArrayIndexOutOfBoundsExceptions
# which is in fact not very dev friendly at all
struts.devMode=${devMode}
struts.configuration.xml.reload=${devMode}
struts.convention.classes.reload=${devMode}
struts.freemarker.templatesCache=${notDevMode}

# action mapping - options: regex, namedVariable. Defaults to wildcardHelper
#struts.patternMatcher=namedVariable
struts.enable.DynamicMethodInvocation=true
struts.enable.SlashesInActionNames=true
struts.mapper.alwaysSelectFullNamespace=false

struts.objectFactory = guice
struts.ognl.allowStaticMethodAccess=true
struts.ui.theme=simple
# struts.locale=en_US
struts.custom.i18n.resources=resources
struts.i18n.encoding=UTF-8

# Used by the DefaultActionMapper
# The blank extension allows you to match {id} that has a dot (.) in it - otherwise it gets interpreted as an extension
# Be careful to not leave an empty string at the end of this property, must be newline character
struts.action.extension=
# (As of 2.2.x) Struts2 will allow any matching requests to pass through
# This is needed, since above struts.action.extension= causes nothing to pass through to the file system
struts.action.excludePattern=/js/.*,/css/.*,/fonts/.*,/img/.*,/external/.*,/conf/.*

struts.urlRenderer=org.gbif.portal.struts.ConfigurableServletUrlRenderer
struts.url.includeContext=${url.includeContext}


