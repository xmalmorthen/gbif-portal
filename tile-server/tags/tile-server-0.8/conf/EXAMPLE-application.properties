# If present will push throughput and performance metrics to Ganglia
# ganglia.port=8649
# ganglia.server=

#density-tile.cube.hbase-table=cube_density

# "csv-in-memory" or "hbase" depending on the storage layer
# "csv-in-memory" is for a single csv file of lat,lng,count that
# creates a single dimension taxon cube using key "1" and is intented for offline development
# purposes
#tile-server.cube.harness=csv-in-memory
tile-server.cube.harness=hbase

###
# The following control the tile server ONLY cube when the hbase harness is used
##
density-cube.cubeTable=density_cube
density-cube.counterTable=density_cube_counter
density-cube.lookupTable=density_cube_lookup
density-cube.columnFamily=dc
# controls the batch size for writes to the cube 
# (this is not used, but a required property for instantiating a cube)
density-cube.writeBatchSize=1000

###
# The following control the tile server ONLY when the csv-in-memory harness is used
##
# A single csv is loaded into an in-memory cube, processed to number of zooms (1-23)
tile-server.csv.location=src/test/resources/us-sampled.csv.gz
# higher zooms on large files can be slow to start, and use more memory
tile-server.csv.numberOfZooms=4
tile-server.csv.pixelsPerCluster=1